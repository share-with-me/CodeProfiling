******* Existing gadgets *******
0x000000000040049f (3 ): LES ECX,[EAX]; RET;  (c408c3)
0x000000000040049e (4 ): ADD ESP,0x8; RET;  (83c408c3)
0x000000000040049d (5 ): DEC EAX; ADD ESP,0x8; RET;  (4883c408c3)
0x000000000040049c (6 ): ADD [EAX-0x7d],CL; LES ECX,[EAX]; RET;  (004883c408c3)
0x000000000040049b (7 ): ADD [EAX],AL; DEC EAX; ADD ESP,0x8; RET;  (00004883c408c3)
0x000000000040049a (8 ): ADD [EAX],AL; ADD [EAX-0x7d],CL; LES ECX,[EAX]; RET;  (0000004883c408c3)
0x0000000000400499 (9 ): INC EBX; ADD [EAX],AL; ADD [EAX-0x7d],CL; LES ECX,[EAX]; RET;  (430000004883c408c3)
0x0000000000400498 (10): CALL 0x48; DEC EAX; ADD ESP,0x8; RET;  (e8430000004883c408c3)
0x0000000000400497 (11): ADD EAX,0x43e8; ADD [EAX-0x7d],CL; LES ECX,[EAX]; RET;  (05e8430000004883c408c3)
0x0000000000400496 (12): JZ 0x7; CALL 0x4a; DEC EAX; ADD ESP,0x8; RET;  (7405e8430000004883c408c3)
0x0000000000400495 (13): SAL BYTE [EBP+EAX-0x18],0x43; ADD [EAX],AL; ADD [EAX-0x7d],CL; LES ECX,[EAX]; RET;  (c07405e8430000004883c408c3)
0x0000000000400485 (3 ): LES ECX,[EAX]; RET;  (c408c3)
0x0000000000400590 (2 ): POP EBP; RET;  (5dc3)
0x000000000040058e (4 ): ADD [EAX],AL; POP EBP; RET;  (00005dc3)
0x000000000040058c (6 ): ADD [EAX],AL; ADD [EAX],AL; POP EBP; RET;  (000000005dc3)
0x000000000040058a (8 ): TEST [EAX],AL; ADD [EAX],AL; ADD [EAX],AL; POP EBP; RET;  (8400000000005dc3)
0x0000000000400588 (10): NOP DWORD [EAX+EAX+0x0]; POP EBP; RET;  (0f1f8400000000005dc3)
0x0000000000400587 (11): NOP WORD [EAX+EAX+0x0]; POP EBP; RET;  (660f1f8400000000005dc3)
0x0000000000400586 (12): LOOPNZ 0x68; NOP DWORD [EAX+EAX+0x0]; POP EBP; RET;  (e0660f1f8400000000005dc3)
0x0000000000400585 (13): JMP EAX; NOP WORD [EAX+EAX+0x0]; POP EBP; RET;  (ffe0660f1f8400000000005dc3)
0x0000000000400584 (14): ADD BH,BH; LOOPNZ 0x6a; NOP DWORD [EAX+EAX+0x0]; POP EBP; RET;  (00ffe0660f1f8400000000005dc3)
0x0000000000400582 (16): OR ESP,[EAX+0x0]; JMP EAX; NOP WORD [EAX+EAX+0x0]; POP EBP; RET;  (0b6000ffe0660f1f8400000000005dc3)
0x0000000000400580 (18): MOV EDI,0x600b18; JMP EAX; NOP WORD [EAX+EAX+0x0]; POP EBP; RET;  (bf180b6000ffe0660f1f8400000000005dc3)
0x00000000004005d8 (2 ): POP EBP; RET;  (5dc3)
0x00000000004005d5 (5 ): NOP DWORD [EAX]; POP EBP; RET;  (0f1f005dc3)
0x00000000004005d3 (7 ): JMP EAX; NOP DWORD [EAX]; POP EBP; RET;  (ffe00f1f005dc3)
0x00000000004005d0 (10): OR ESP,[EAX+0x0]; JMP EAX; NOP DWORD [EAX]; POP EBP; RET;  (0b6000ffe00f1f005dc3)
0x00000000004005ce (12): MOV EDI,0x600b18; JMP EAX; NOP DWORD [EAX]; POP EBP; RET;  (bf180b6000ffe00f1f005dc3)
0x00000000004005f9 (3 ): ADD EBX,ESI; RET;  (01f3c3)
0x00000000004005f8 (4 ): ADD [ECX],AL; RET;  (0001f3c3)
0x00000000004005f7 (5 ): AND [EAX],AL; ADD EBX,ESI; RET;  (200001f3c3)
0x00000000004005f6 (6 ): ADD EAX,0xf3010020; RET;  (05200001f3c3)
0x00000000004005f5 (7 ): PUSH DS; ADD EAX,0xf3010020; RET;  (1e05200001f3c3)
0x00000000004005f4 (8 ): ADD EAX,0x20051e; ADD EBX,ESI; RET;  (051e05200001f3c3)
0x00000000004005f3 (9 ): MOV BYTE [0x20051e],0x1; RET;  (c6051e05200001f3c3)
0x00000000004005f2 (10): POP EBP; MOV BYTE [0x20051e],0x1; RET;  (5dc6051e05200001f3c3)
0x00000000004005f1 (11): CALL FAR DWORD [EBP-0x3a]; ADD EAX,0x20051e; ADD EBX,ESI; RET;  (ff5dc6051e05200001f3c3)
0x00000000004005ed (15): CALL 0xffffff73; POP EBP; MOV BYTE [0x20051e],0x1; RET;  (e86effffff5dc6051e05200001f3c3)
0x00000000004005eb (17): MOV EBP,ESP; CALL 0xffffff75; POP EBP; MOV BYTE [0x20051e],0x1; RET;  (89e5e86effffff5dc6051e05200001f3c3)
0x00000000004006dd (2 ): LEAVE; RET;  (c9c3)
0x00000000004006dc (3 ): ADD CL,CL; RET;  (00c9c3)
0x00000000004006db (4 ): ADD [EAX],AL; LEAVE; RET;  (0000c9c3)
0x00000000004006da (5 ): ADD [EAX],AL; ADD CL,CL; RET;  (000000c9c3)
0x00000000004006d9 (6 ): ADD [EAX],AL; ADD [EAX],AL; LEAVE; RET;  (00000000c9c3)
0x00000000004006d8 (7 ): MOV EAX,0x0; LEAVE; RET;  (b800000000c9c3)
0x00000000004006d3 (12): CALL 0xfffffe1d; MOV EAX,0x0; LEAVE; RET;  (e818feffffb800000000c9c3)
0x00000000004006d1 (14): ADD [EAX],AL; CALL 0xfffffe1f; MOV EAX,0x0; LEAVE; RET;  (0000e818feffffb800000000c9c3)
0x00000000004006ce (17): MOV EAX,0x0; CALL 0xfffffe22; MOV EAX,0x0; LEAVE; RET;  (b800000000e818feffffb800000000c9c3)
0x00000000004006cd (18): ADD [EAX+0x0],BH; CALL 0xfffffe23; MOV EAX,0x0; LEAVE; RET;  (00b800000000e818feffffb800000000c9c3)
0x000000000040072c (4 ): FMUL QWORD [EAX-0x7d]; RET;  (dc4883c3)
0x0000000000400743 (2 ): POP EDI; RET;  (5fc3)
0x0000000000400742 (3 ): INC ECX; POP EDI; RET;  (415fc3)
0x0000000000400741 (4 ): POP ESI; INC ECX; POP EDI; RET;  (5e415fc3)
0x0000000000400740 (5 ): INC ECX; POP ESI; INC ECX; POP EDI; RET;  (415e415fc3)
0x000000000040074f (3 ): ADD BL,DH; RET;  (00f3c3)
0x000000000040074e (4 ): ADD [EAX],AL; RET;  (0000f3c3)
0x000000000040074d (5 ): ADD [EAX],AL; ADD BL,DH; RET;  (000000f3c3)
0x000000000040074c (6 ): ADD [EAX],AL; ADD [EAX],AL; RET;  (00000000f3c3)
0x000000000040074b (7 ): ADD [EAX],AL; ADD [EAX],AL; ADD BL,DH; RET;  (0000000000f3c3)
0x000000000040074a (8 ): TEST [EAX],AL; ADD [EAX],AL; ADD [EAX],AL; RET;  (840000000000f3c3)
0x0000000000400749 (9 ): POP DS; TEST [EAX],AL; ADD [EAX],AL; ADD [EAX],AL; RET;  (1f840000000000f3c3)
0x0000000000400748 (10): NOP DWORD [EAX+EAX+0x0]; RET;  (0f1f840000000000f3c3)
0x0000000000400747 (11): NOP DWORD [CS:EAX+EAX+0x0]; RET;  (2e0f1f840000000000f3c3)
0x0000000000400746 (12): NOP WORD [CS:EAX+EAX+0x0]; RET;  (662e0f1f840000000000f3c3)
0x0000000000400745 (13): NOP WORD [CS:EAX+EAX+0x0]; RET;  (66662e0f1f840000000000f3c3)
0x0000000000400744 (14): RET; NOP WORD [CS:EAX+EAX+0x0]; RET;  (c366662e0f1f840000000000f3c3)
0x0000000000400743 (15): POP EDI; RET; NOP WORD [CS:EAX+EAX+0x0]; RET;  (5fc366662e0f1f840000000000f3c3)
0x0000000000400742 (16): INC ECX; POP EDI; RET; NOP WORD [CS:EAX+EAX+0x0]; RET;  (415fc366662e0f1f840000000000f3c3)
0x000000000040075a (3 ): LES ECX,[EAX]; RET;  (c408c3)
0x0000000000400759 (4 ): ADD ESP,0x8; RET;  (83c408c3)
0x0000000000400758 (5 ): DEC EAX; ADD ESP,0x8; RET;  (4883c408c3)
0x0000000000400757 (6 ): OR [EAX-0x7d],CL; LES ECX,[EAX]; RET;  (084883c408c3)
0x0000000000400756 (7 ): IN AL,DX; OR [EAX-0x7d],CL; LES ECX,[EAX]; RET;  (ec084883c408c3)
0x0000000000400755 (8 ): SUB ESP,0x8; DEC EAX; ADD ESP,0x8; RET;  (83ec084883c408c3)
0x0000000000400754 (9 ): DEC EAX; SUB ESP,0x8; DEC EAX; ADD ESP,0x8; RET;  (4883ec084883c408c3)
0x0000000000400751 (3 ): LES ECX,[EAX]; RET;  (c408c3)
0x0000000000400750 (4 ): ADD ESP,0x8; RET;  (83c408c3)
0x000000000040074f (5 ): DEC EAX; ADD ESP,0x8; RET;  (4883c408c3)
0x000000000040074e (6 ): OR [EAX-0x7d],CL; LES ECX,[EAX]; RET;  (084883c408c3)
0x000000000040074d (7 ): IN AL,DX; OR [EAX-0x7d],CL; LES ECX,[EAX]; RET;  (ec084883c408c3)
0x000000000040074c (8 ): SUB ESP,0x8; DEC EAX; ADD ESP,0x8; RET;  (83ec084883c408c3)
0x000000000040074b (9 ): DEC EAX; SUB ESP,0x8; DEC EAX; ADD ESP,0x8; RET;  (4883ec084883c408c3)
0x000000000040074a (9 ): DEC EAX; SUB ESP,0x8; DEC EAX; ADD ESP,0x8; RET;  (4883ec084883c408c3)
0x0000000000400749 (9 ): DEC EAX; SUB ESP,0x8; DEC EAX; ADD ESP,0x8; RET;  (4883ec084883c408c3)
0x0000000000400748 (9 ): DEC EAX; SUB ESP,0x8; DEC EAX; ADD ESP,0x8; RET;  (4883ec084883c408c3)
0x0000000000400747 (9 ): DEC EAX; SUB ESP,0x8; DEC EAX; ADD ESP,0x8; RET;  (4883ec084883c408c3)
0x0000000000400746 (9 ): DEC EAX; SUB ESP,0x8; DEC EAX; ADD ESP,0x8; RET;  (4883ec084883c408c3)
0x0000000000400745 (9 ): DEC EAX; SUB ESP,0x8; DEC EAX; ADD ESP,0x8; RET;  (4883ec084883c408c3)
0x0000000000400744 (9 ): DEC EAX; SUB ESP,0x8; DEC EAX; ADD ESP,0x8; RET;  (4883ec084883c408c3)
0x0000000000400743 (9 ): DEC EAX; SUB ESP,0x8; DEC EAX; ADD ESP,0x8; RET;  (4883ec084883c408c3)
0x0000000000400742 (9 ): DEC EAX; SUB ESP,0x8; DEC EAX; ADD ESP,0x8; RET;  (4883ec084883c408c3)
0x0000000000400741 (9 ): DEC EAX; SUB ESP,0x8; DEC EAX; ADD ESP,0x8; RET;  (4883ec084883c408c3)
0x0000000000400740 (9 ): DEC EAX; SUB ESP,0x8; DEC EAX; ADD ESP,0x8; RET;  (4883ec084883c408c3)
******* Far return gadgets *******
******* Modified immediates *******
    *** Pass 0 ***
4883ec08 => 4883ecc3 (offset 3, imm_len 1)
4883c408 => 4883c4c3 (offset 3, imm_len 1)
b81f0b6000 => b8c30b6000 (offset 1, imm_len 4)
482d180b6000 => 482dc30b6000 (offset 2, imm_len 4)
b800000000 => b8c3000000 (offset 1, imm_len 4)
bf180b6000 => bfc30b6000 (offset 1, imm_len 4)
be180b6000 => bec30b6000 (offset 1, imm_len 4)
4881ee180b6000 => 4881eec30b6000 (offset 3, imm_len 4)
b800000000 => b8c3000000 (offset 1, imm_len 4)
bf180b6000 => bfc30b6000 (offset 1, imm_len 4)
c6051e05200001 => c6051e052000c3 (offset 6, imm_len 1)
bfd8086000 => bfc3086000 (offset 1, imm_len 4)
b800000000 => b8c3000000 (offset 1, imm_len 4)
4883ec10 => 4883ecc3 (offset 3, imm_len 1)
b900000000 => b9c3000000 (offset 1, imm_len 4)
ba00000000 => bac3000000 (offset 1, imm_len 4)
be00000000 => bec3000000 (offset 1, imm_len 4)
bf00000000 => bfc3000000 (offset 1, imm_len 4)
b800000000 => b8c3000000 (offset 1, imm_len 4)
ba00000000 => bac3000000 (offset 1, imm_len 4)
be68074000 => bec3074000 (offset 1, imm_len 4)
bf6b074000 => bfc3074000 (offset 1, imm_len 4)
b800000000 => b8c3000000 (offset 1, imm_len 4)
b800000000 => b8c3000000 (offset 1, imm_len 4)
b900000000 => b9c3000000 (offset 1, imm_len 4)
ba3c000000 => bac3000000 (offset 1, imm_len 4)
bf03000000 => bfc3000000 (offset 1, imm_len 4)
b800000000 => b8c3000000 (offset 1, imm_len 4)
bf78074000 => bfc3074000 (offset 1, imm_len 4)
b800000000 => b8c3000000 (offset 1, imm_len 4)
b900000000 => b9c3000000 (offset 1, imm_len 4)
ba00000000 => bac3000000 (offset 1, imm_len 4)
bf07000000 => bfc3000000 (offset 1, imm_len 4)
b800000000 => b8c3000000 (offset 1, imm_len 4)
b800000000 => b8c3000000 (offset 1, imm_len 4)
4883ec08 => 4883ecc3 (offset 3, imm_len 1)
4883c301 => 4883c3c3 (offset 3, imm_len 1)
4883c408 => 4883c4c3 (offset 3, imm_len 1)
4883ec08 => 4883ecc3 (offset 3, imm_len 1)
4883c408 => 4883c4c3 (offset 3, imm_len 1)
Modified 40 immediates
0x000000000040048a (2 ): IN AL,DX; RET;  (ecc3)
0x0000000000400470 (2 ): IN AL,DX; RET;  (ecc3)
0x00000000004004a0 (2 ): RET; RET;  (c3c3)
0x000000000040049e (4 ): ADD ESP,-0x3d; RET;  (83c4c3c3)
0x000000000040049d (5 ): DEC EAX; ADD ESP,-0x3d; RET;  (4883c4c3c3)
0x000000000040049b (7 ): ADD [EAX],AL; DEC EAX; ADD ESP,-0x3d; RET;  (00004883c4c3c3)
0x0000000000400498 (10): CALL 0x48; DEC EAX; ADD ESP,-0x3d; RET;  (e8430000004883c4c3c3)
0x0000000000400496 (12): JZ 0x7; CALL 0x4a; DEC EAX; ADD ESP,-0x3d; RET;  (7405e8430000004883c4c3c3)
0x0000000000400486 (2 ): RET; RET;  (c3c3)
0x000000000040057e (4 ): ADC [EBP-0x41],EBX; RET;  (115dbfc3)
0x000000000040057c (6 ): SAL BYTE [ECX+EDX+0x5d],0xbf; RET;  (c074115dbfc3)
0x0000000000400579 (9 ): ADD [EAX-0x7b],CL; SAL BYTE [ECX+EDX+0x5d],0xbf; RET;  (004885c074115dbfc3)
0x0000000000400577 (11): ADD [EAX],AL; ADD [EAX-0x7b],CL; SAL BYTE [ECX+EDX+0x5d],0xbf; RET;  (0000004885c074115dbfc3)
0x0000000000400576 (12): RET; ADD [EAX],AL; ADD [EAX-0x7b],CL; SAL BYTE [ECX+EDX+0x5d],0xbf; RET;  (c30000004885c074115dbfc3)
0x0000000000400580 (18): MOV EDI,0x600bc3; JMP EAX; NOP WORD [EAX+EAX+0x0]; POP EBP; RET;  (bfc30b6000ffe0660f1f8400000000005dc3)
0x00000000004005a8 (2 ): OUT DX,AL; RET;  (eec3)
0x00000000004005cc (4 ): OR EBX,[EBP-0x41]; RET;  (0b5dbfc3)
0x00000000004005ca (6 ): SAL BYTE [EBX+ECX+0x5d],0xbf; RET;  (c0740b5dbfc3)
0x00000000004005c7 (9 ): ADD [EAX-0x7b],CL; SAL BYTE [EBX+ECX+0x5d],0xbf; RET;  (004885c0740b5dbfc3)
0x00000000004005c5 (11): ADD [EAX],AL; ADD [EAX-0x7b],CL; SAL BYTE [EBX+ECX+0x5d],0xbf; RET;  (0000004885c0740b5dbfc3)
0x00000000004005c4 (12): RET; ADD [EAX],AL; ADD [EAX-0x7b],CL; SAL BYTE [EBX+ECX+0x5d],0xbf; RET;  (c30000004885c0740b5dbfc3)
0x00000000004005c2 (14): ADC EAX,0xc3b8; ADD [EAX-0x7b],CL; SAL BYTE [EBX+ECX+0x5d],0xbf; RET;  (15b8c30000004885c0740b5dbfc3)
0x00000000004005ce (12): MOV EDI,0x600bc3; JMP EAX; NOP DWORD [EAX]; POP EBP; RET;  (bfc30b6000ffe00f1f005dc3)
0x00000000004005f7 (3 ): AND [EAX],AL; RET;  (2000c3)
0x00000000004005f4 (6 ): ADD EAX,0x20051e; RET;  (051e052000c3)
0x00000000004005f1 (9 ): CALL FAR DWORD [EBP-0x3a]; ADD EAX,0x20051e; RET;  (ff5dc6051e052000c3)
0x00000000004005f9 (3 ): RET; RET;  (c3f3c3)
0x00000000004005f8 (4 ): ADD BL,AL; RET;  (00c3f3c3)
0x00000000004005f7 (5 ): AND [EAX],AL; RET; RET;  (2000c3f3c3)
0x00000000004005f6 (6 ): ADD EAX,0xf3c30020; RET;  (052000c3f3c3)
0x00000000004005f5 (7 ): PUSH DS; ADD EAX,0xf3c30020; RET;  (1e052000c3f3c3)
0x00000000004005f4 (8 ): ADD EAX,0x20051e; RET; RET;  (051e052000c3f3c3)
0x00000000004005f3 (9 ): MOV BYTE [0x20051e],0xc3; RET;  (c6051e052000c3f3c3)
0x00000000004005f2 (10): POP EBP; MOV BYTE [0x20051e],0xc3; RET;  (5dc6051e052000c3f3c3)
0x00000000004005f1 (11): CALL FAR DWORD [EBP-0x3a]; ADD EAX,0x20051e; RET; RET;  (ff5dc6051e052000c3f3c3)
0x00000000004005ed (15): CALL 0xffffff73; POP EBP; MOV BYTE [0x20051e],0xc3; RET;  (e86effffff5dc6051e052000c3f3c3)
0x00000000004005eb (17): MOV EBP,ESP; CALL 0xffffff75; POP EBP; MOV BYTE [0x20051e],0xc3; RET;  (89e5e86effffff5dc6051e052000c3f3c3)
0x000000000040062c (2 ): IN AL,DX; RET;  (ecc3)
0x00000000004006d9 (6 ): RET; ADD [EAX],AL; ADD CL,CL; RET;  (c3000000c9c3)
0x00000000004006d8 (7 ): MOV EAX,0xc3; LEAVE; RET;  (b8c3000000c9c3)
0x00000000004006d3 (12): CALL 0xfffffe1d; MOV EAX,0xc3; LEAVE; RET;  (e818feffffb8c3000000c9c3)
0x00000000004006d1 (14): ADD [EAX],AL; CALL 0xfffffe1f; MOV EAX,0xc3; LEAVE; RET;  (0000e818feffffb8c3000000c9c3)
0x00000000004006ce (17): MOV EAX,0xc3; CALL 0xfffffe22; MOV EAX,0xc3; LEAVE; RET;  (b8c3000000e818feffffb8c3000000c9c3)
0x00000000004006cd (18): ADD [EAX+0xc3],BH; CALL 0xfffffe23; MOV EAX,0xc3; LEAVE; RET;  (00b8c3000000e818feffffb8c3000000c9c3)
0x000000000040070c (2 ): IN AL,DX; RET;  (ecc3)
0x0000000000400709 (5 ): ADD ECX,[EAX-0x7d]; IN AL,DX; RET;  (034883ecc3)
0x0000000000400708 (6 ): STD; ADD ECX,[EAX-0x7d]; IN AL,DX; RET;  (fd034883ecc3)
0x0000000000400705 (9 ): FISTTP DWORD [EAX-0x3f]; STD; ADD ECX,[EAX-0x7d]; IN AL,DX; RET;  (db48c1fd034883ecc3)
0x000000000040072f (2 ): RET; RET;  (c3c3)
0x000000000040072c (5 ): FMUL QWORD [EAX-0x7d]; RET; RET;  (dc4883c3c3)
0x0000000000400756 (2 ): IN AL,DX; RET;  (ecc3)
0x000000000040074d (2 ): IN AL,DX; RET;  (ecc3)
0x000000000040075b (2 ): RET; RET;  (c3c3)
0x0000000000400759 (4 ): ADD ESP,-0x3d; RET;  (83c4c3c3)
0x0000000000400758 (5 ): DEC EAX; ADD ESP,-0x3d; RET;  (4883c4c3c3)
0x0000000000400757 (6 ): RET; DEC EAX; ADD ESP,-0x3d; RET;  (c34883c4c3c3)
0x0000000000400756 (7 ): IN AL,DX; RET; DEC EAX; ADD ESP,-0x3d; RET;  (ecc34883c4c3c3)
0x0000000000400755 (8 ): SUB ESP,-0x3d; DEC EAX; ADD ESP,-0x3d; RET;  (83ecc34883c4c3c3)
0x0000000000400754 (9 ): DEC EAX; SUB ESP,-0x3d; DEC EAX; ADD ESP,-0x3d; RET;  (4883ecc34883c4c3c3)
0x0000000000400752 (2 ): RET; RET;  (c3c3)
0x0000000000400750 (4 ): ADD ESP,-0x3d; RET;  (83c4c3c3)
0x000000000040074f (5 ): DEC EAX; ADD ESP,-0x3d; RET;  (4883c4c3c3)
0x000000000040074e (6 ): RET; DEC EAX; ADD ESP,-0x3d; RET;  (c34883c4c3c3)
0x000000000040074d (7 ): IN AL,DX; RET; DEC EAX; ADD ESP,-0x3d; RET;  (ecc34883c4c3c3)
0x000000000040074c (8 ): SUB ESP,-0x3d; DEC EAX; ADD ESP,-0x3d; RET;  (83ecc34883c4c3c3)
0x000000000040074b (9 ): DEC EAX; SUB ESP,-0x3d; DEC EAX; ADD ESP,-0x3d; RET;  (4883ecc34883c4c3c3)
0x000000000040074a (9 ): DEC EAX; SUB ESP,-0x3d; DEC EAX; ADD ESP,-0x3d; RET;  (4883ecc34883c4c3c3)
0x0000000000400749 (9 ): DEC EAX; SUB ESP,-0x3d; DEC EAX; ADD ESP,-0x3d; RET;  (4883ecc34883c4c3c3)
0x0000000000400748 (9 ): DEC EAX; SUB ESP,-0x3d; DEC EAX; ADD ESP,-0x3d; RET;  (4883ecc34883c4c3c3)
0x0000000000400747 (9 ): DEC EAX; SUB ESP,-0x3d; DEC EAX; ADD ESP,-0x3d; RET;  (4883ecc34883c4c3c3)
0x0000000000400746 (9 ): DEC EAX; SUB ESP,-0x3d; DEC EAX; ADD ESP,-0x3d; RET;  (4883ecc34883c4c3c3)
0x0000000000400745 (9 ): DEC EAX; SUB ESP,-0x3d; DEC EAX; ADD ESP,-0x3d; RET;  (4883ecc34883c4c3c3)
0x0000000000400744 (9 ): DEC EAX; SUB ESP,-0x3d; DEC EAX; ADD ESP,-0x3d; RET;  (4883ecc34883c4c3c3)
0x0000000000400743 (9 ): DEC EAX; SUB ESP,-0x3d; DEC EAX; ADD ESP,-0x3d; RET;  (4883ecc34883c4c3c3)
0x0000000000400742 (9 ): DEC EAX; SUB ESP,-0x3d; DEC EAX; ADD ESP,-0x3d; RET;  (4883ecc34883c4c3c3)
0x0000000000400741 (9 ): DEC EAX; SUB ESP,-0x3d; DEC EAX; ADD ESP,-0x3d; RET;  (4883ecc34883c4c3c3)
0x0000000000400740 (9 ): DEC EAX; SUB ESP,-0x3d; DEC EAX; ADD ESP,-0x3d; RET;  (4883ecc34883c4c3c3)
Protected 152 new locations in pass 0
    *** Pass 1 ***
b81f0b6000 => b81fc36000 (offset 2, imm_len 4)
482d180b6000 => 482d18c36000 (offset 3, imm_len 4)
b800000000 => b800c30000 (offset 2, imm_len 4)
bf180b6000 => bf18c36000 (offset 2, imm_len 4)
be180b6000 => be18c36000 (offset 2, imm_len 4)
4881ee180b6000 => 4881ee18c36000 (offset 4, imm_len 4)
b800000000 => b800c30000 (offset 2, imm_len 4)
bf180b6000 => bf18c36000 (offset 2, imm_len 4)
bfd8086000 => bfd8c36000 (offset 2, imm_len 4)
b800000000 => b800c30000 (offset 2, imm_len 4)
b900000000 => b900c30000 (offset 2, imm_len 4)
ba00000000 => ba00c30000 (offset 2, imm_len 4)
be00000000 => be00c30000 (offset 2, imm_len 4)
bf00000000 => bf00c30000 (offset 2, imm_len 4)
b800000000 => b800c30000 (offset 2, imm_len 4)
ba00000000 => ba00c30000 (offset 2, imm_len 4)
be68074000 => be68c34000 (offset 2, imm_len 4)
bf6b074000 => bf6bc34000 (offset 2, imm_len 4)
b800000000 => b800c30000 (offset 2, imm_len 4)
b800000000 => b800c30000 (offset 2, imm_len 4)
b900000000 => b900c30000 (offset 2, imm_len 4)
ba3c000000 => ba3cc30000 (offset 2, imm_len 4)
bf03000000 => bf03c30000 (offset 2, imm_len 4)
b800000000 => b800c30000 (offset 2, imm_len 4)
bf78074000 => bf78c34000 (offset 2, imm_len 4)
b800000000 => b800c30000 (offset 2, imm_len 4)
b900000000 => b900c30000 (offset 2, imm_len 4)
ba00000000 => ba00c30000 (offset 2, imm_len 4)
bf07000000 => bf07c30000 (offset 2, imm_len 4)
b800000000 => b800c30000 (offset 2, imm_len 4)
b800000000 => b800c30000 (offset 2, imm_len 4)
Modified 31 immediates
0x0000000000400561 (2 ): POP DS; RET;  (1fc3)
0x0000000000400580 (18): MOV EDI,0x60c318; JMP EAX; NOP WORD [EAX+EAX+0x0]; POP EBP; RET;  (bf18c36000ffe0660f1f8400000000005dc3)
0x00000000004005ce (12): MOV EDI,0x60c318; JMP EAX; NOP DWORD [EAX]; POP EBP; RET;  (bf18c36000ffe00f1f005dc3)
0x0000000000400681 (7 ): DEC DWORD [EBX+0xb9fc45]; RET;  (ff8b45fcb900c3)
0x00000000004006b9 (7 ): DEC DWORD [EBX+0xb9fc45]; RET;  (ff8b45fcb900c3)
0x00000000004006ca (2 ): POP ES; RET;  (07c3)
0x00000000004006da (5 ): RET; ADD [EAX],AL; LEAVE; RET;  (c30000c9c3)
0x00000000004006d9 (6 ): ADD BL,AL; ADD [EAX],AL; LEAVE; RET;  (00c30000c9c3)
0x00000000004006d8 (7 ): MOV EAX,0xc300; LEAVE; RET;  (b800c30000c9c3)
0x00000000004006d3 (12): CALL 0xfffffe1d; MOV EAX,0xc300; LEAVE; RET;  (e818feffffb800c30000c9c3)
0x00000000004006d1 (14): ADD [EAX],AL; CALL 0xfffffe1f; MOV EAX,0xc300; LEAVE; RET;  (0000e818feffffb800c30000c9c3)
0x00000000004006ce (17): MOV EAX,0xc300; CALL 0xfffffe22; MOV EAX,0xc300; LEAVE; RET;  (b800c30000e818feffffb800c30000c9c3)
0x00000000004006cd (18): ADD [EAX+0xc300],BH; CALL 0xfffffe23; MOV EAX,0xc300; LEAVE; RET;  (00b800c30000e818feffffb800c30000c9c3)
Protected 18 new locations in pass 1
    *** Pass 2 ***
b81f0b6000 => b81f0bc300 (offset 3, imm_len 4)
482d180b6000 => 482d180bc300 (offset 4, imm_len 4)
b800000000 => b80000c300 (offset 3, imm_len 4)
bf180b6000 => bf180bc300 (offset 3, imm_len 4)
be180b6000 => be180bc300 (offset 3, imm_len 4)
4881ee180b6000 => 4881ee180bc300 (offset 5, imm_len 4)
b800000000 => b80000c300 (offset 3, imm_len 4)
bf180b6000 => bf180bc300 (offset 3, imm_len 4)
bfd8086000 => bfd808c300 (offset 3, imm_len 4)
b800000000 => b80000c300 (offset 3, imm_len 4)
b900000000 => b90000c300 (offset 3, imm_len 4)
ba00000000 => ba0000c300 (offset 3, imm_len 4)
be00000000 => be0000c300 (offset 3, imm_len 4)
bf00000000 => bf0000c300 (offset 3, imm_len 4)
b800000000 => b80000c300 (offset 3, imm_len 4)
ba00000000 => ba0000c300 (offset 3, imm_len 4)
be68074000 => be6807c300 (offset 3, imm_len 4)
bf6b074000 => bf6b07c300 (offset 3, imm_len 4)
b800000000 => b80000c300 (offset 3, imm_len 4)
b800000000 => b80000c300 (offset 3, imm_len 4)
b900000000 => b90000c300 (offset 3, imm_len 4)
ba3c000000 => ba3c00c300 (offset 3, imm_len 4)
bf03000000 => bf0300c300 (offset 3, imm_len 4)
b800000000 => b80000c300 (offset 3, imm_len 4)
bf78074000 => bf7807c300 (offset 3, imm_len 4)
b800000000 => b80000c300 (offset 3, imm_len 4)
b900000000 => b90000c300 (offset 3, imm_len 4)
ba00000000 => ba0000c300 (offset 3, imm_len 4)
bf07000000 => bf0700c300 (offset 3, imm_len 4)
b800000000 => b80000c300 (offset 3, imm_len 4)
b800000000 => b80000c300 (offset 3, imm_len 4)
Modified 31 immediates
0x0000000000400568 (3 ): SBB [EBX],CL; RET;  (180bc3)
0x0000000000400576 (3 ): ADD [EAX],AL; RET;  (0000c3)
0x0000000000400581 (3 ): SBB [EBX],CL; RET;  (180bc3)
0x000000000040057e (6 ): ADC [EBP-0x41],EBX; SBB [EBX],CL; RET;  (115dbf180bc3)
0x000000000040057c (8 ): SAL BYTE [ECX+EDX+0x5d],0xbf; SBB [EBX],CL; RET;  (c074115dbf180bc3)
0x0000000000400579 (11): ADD [EAX-0x7b],CL; SAL BYTE [ECX+EDX+0x5d],0xbf; SBB [EBX],CL; RET;  (004885c074115dbf180bc3)
0x0000000000400578 (12): RET; ADD [EAX-0x7b],CL; SAL BYTE [ECX+EDX+0x5d],0xbf; SBB [EBX],CL; RET;  (c3004885c074115dbf180bc3)
0x0000000000400577 (13): ADD BL,AL; ADD [EAX-0x7b],CL; SAL BYTE [ECX+EDX+0x5d],0xbf; SBB [EBX],CL; RET;  (00c3004885c074115dbf180bc3)
0x0000000000400580 (18): MOV EDI,0xc30b18; JMP EAX; NOP WORD [EAX+EAX+0x0]; POP EBP; RET;  (bf180bc300ffe0660f1f8400000000005dc3)
0x00000000004005a1 (3 ): SBB [EBX],CL; RET;  (180bc3)
0x00000000004005a9 (3 ): SBB [EBX],CL; RET;  (180bc3)
0x00000000004005a8 (4 ): OUT DX,AL; SBB [EBX],CL; RET;  (ee180bc3)
0x00000000004005c4 (3 ): ADD [EAX],AL; RET;  (0000c3)
0x00000000004005cf (3 ): SBB [EBX],CL; RET;  (180bc3)
0x00000000004005cc (6 ): OR EBX,[EBP-0x41]; SBB [EBX],CL; RET;  (0b5dbf180bc3)
0x00000000004005ca (8 ): SAL BYTE [EBX+ECX+0x5d],0xbf; SBB [EBX],CL; RET;  (c0740b5dbf180bc3)
0x00000000004005c7 (11): ADD [EAX-0x7b],CL; SAL BYTE [EBX+ECX+0x5d],0xbf; SBB [EBX],CL; RET;  (004885c0740b5dbf180bc3)
0x00000000004005c6 (12): RET; ADD [EAX-0x7b],CL; SAL BYTE [EBX+ECX+0x5d],0xbf; SBB [EBX],CL; RET;  (c3004885c0740b5dbf180bc3)
0x00000000004005c5 (13): ADD BL,AL; ADD [EAX-0x7b],CL; SAL BYTE [EBX+ECX+0x5d],0xbf; SBB [EBX],CL; RET;  (00c3004885c0740b5dbf180bc3)
0x00000000004005c2 (16): ADC EAX,0xc30000b8; ADD [EAX-0x7b],CL; SAL BYTE [EBX+ECX+0x5d],0xbf; SBB [EBX],CL; RET;  (15b80000c3004885c0740b5dbf180bc3)
0x00000000004005ce (12): MOV EDI,0xc30b18; JMP EAX; NOP DWORD [EAX]; POP EBP; RET;  (bf180bc300ffe00f1f005dc3)
0x0000000000400601 (3 ): FMUL DWORD [EAX]; RET;  (d808c3)
0x0000000000400611 (3 ): ADD [EAX],AL; RET;  (0000c3)
0x000000000040063d (3 ): ADD [EAX],AL; RET;  (0000c3)
0x0000000000400642 (3 ): ADD [EAX],AL; RET;  (0000c3)
0x0000000000400647 (3 ): ADD [EAX],AL; RET;  (0000c3)
0x000000000040064c (3 ): ADD [EAX],AL; RET;  (0000c3)
0x0000000000400651 (3 ): ADD [EAX],AL; RET;  (0000c3)
0x000000000040065b (3 ): ADD [EAX],AL; RET;  (0000c3)
0x0000000000400661 (2 ): POP ES; RET;  (07c3)
0x0000000000400666 (2 ): POP ES; RET;  (07c3)
0x000000000040066a (3 ): ADD [EAX],AL; RET;  (0000c3)
0x0000000000400676 (3 ): ADD [EAX],AL; RET;  (0000c3)
0x0000000000400686 (3 ): ADD [EAX],AL; RET;  (0000c3)
0x000000000040068b (3 ): CMP AL,0x0; RET;  (3c00c3)
0x0000000000400692 (3 ): ADD EAX,[EAX]; RET;  (0300c3)
0x000000000040068e (7 ): ADD [ECX+0x3bfc6],CL; RET;  (0089c6bf0300c3)
0x000000000040068d (8 ): RET; ADD [ECX+0x3bfc6],CL; RET;  (c30089c6bf0300c3)
0x000000000040068c (9 ): ADD BL,AL; ADD [ECX+0x3bfc6],CL; RET;  (00c30089c6bf0300c3)
0x000000000040068b (10): CMP AL,0x0; RET; ADD [ECX+0x3bfc6],CL; RET;  (3c00c30089c6bf0300c3)
0x0000000000400697 (3 ): ADD [EAX],AL; RET;  (0000c3)
0x00000000004006ad (2 ): POP ES; RET;  (07c3)
0x00000000004006ac (3 ): JS 0x9; RET;  (7807c3)
0x00000000004006b1 (3 ): ADD [EAX],AL; RET;  (0000c3)
0x00000000004006be (3 ): ADD [EAX],AL; RET;  (0000c3)
0x00000000004006c3 (3 ): ADD [EAX],AL; RET;  (0000c3)
0x00000000004006c6 (7 ): ADD [ECX+0x7bfc6],CL; RET;  (0089c6bf0700c3)
0x00000000004006c5 (8 ): RET; ADD [ECX+0x7bfc6],CL; RET;  (c30089c6bf0700c3)
0x00000000004006c4 (9 ): ADD BL,AL; ADD [ECX+0x7bfc6],CL; RET;  (00c30089c6bf0700c3)
0x00000000004006c3 (10): ADD [EAX],AL; RET; ADD [ECX+0x7bfc6],CL; RET;  (0000c30089c6bf0700c3)
0x00000000004006cf (3 ): ADD [EAX],AL; RET;  (0000c3)
0x00000000004006d9 (3 ): ADD [EAX],AL; RET;  (0000c3)
0x00000000004006db (4 ): RET; ADD CL,CL; RET;  (c300c9c3)
0x00000000004006da (5 ): ADD BL,AL; ADD CL,CL; RET;  (00c300c9c3)
0x00000000004006d9 (6 ): ADD [EAX],AL; RET; ADD CL,CL; RET;  (0000c300c9c3)
0x00000000004006d8 (7 ): MOV EAX,0xc30000; LEAVE; RET;  (b80000c300c9c3)
0x00000000004006d3 (12): CALL 0xfffffe1d; MOV EAX,0xc30000; LEAVE; RET;  (e818feffffb80000c300c9c3)
0x00000000004006ce (17): MOV EAX,0xc30000; CALL 0xfffffe22; MOV EAX,0xc30000; LEAVE; RET;  (b80000c300e818feffffb80000c300c9c3)
0x00000000004006cd (18): ADD [EAX+0xc30000],BH; CALL 0xfffffe23; MOV EAX,0xc30000; LEAVE; RET;  (00b80000c300e818feffffb80000c300c9c3)
Protected 71 new locations in pass 2
    *** Pass 3 ***
b81f0b6000 => b81f0b60c3 (offset 4, imm_len 4)
482d180b6000 => 482d180b60c3 (offset 5, imm_len 4)
b800000000 => b8000000c3 (offset 4, imm_len 4)
bf180b6000 => bf180b60c3 (offset 4, imm_len 4)
be180b6000 => be180b60c3 (offset 4, imm_len 4)
4881ee180b6000 => 4881ee180b60c3 (offset 6, imm_len 4)
b800000000 => b8000000c3 (offset 4, imm_len 4)
bf180b6000 => bf180b60c3 (offset 4, imm_len 4)
bfd8086000 => bfd80860c3 (offset 4, imm_len 4)
b800000000 => b8000000c3 (offset 4, imm_len 4)
b900000000 => b9000000c3 (offset 4, imm_len 4)
ba00000000 => ba000000c3 (offset 4, imm_len 4)
be00000000 => be000000c3 (offset 4, imm_len 4)
bf00000000 => bf000000c3 (offset 4, imm_len 4)
b800000000 => b8000000c3 (offset 4, imm_len 4)
ba00000000 => ba000000c3 (offset 4, imm_len 4)
be68074000 => be680740c3 (offset 4, imm_len 4)
bf6b074000 => bf6b0740c3 (offset 4, imm_len 4)
b800000000 => b8000000c3 (offset 4, imm_len 4)
b800000000 => b8000000c3 (offset 4, imm_len 4)
b900000000 => b9000000c3 (offset 4, imm_len 4)
ba3c000000 => ba3c0000c3 (offset 4, imm_len 4)
bf03000000 => bf030000c3 (offset 4, imm_len 4)
b800000000 => b8000000c3 (offset 4, imm_len 4)
bf78074000 => bf780740c3 (offset 4, imm_len 4)
b800000000 => b8000000c3 (offset 4, imm_len 4)
b900000000 => b9000000c3 (offset 4, imm_len 4)
ba00000000 => ba000000c3 (offset 4, imm_len 4)
bf07000000 => bf070000c3 (offset 4, imm_len 4)
b800000000 => b8000000c3 (offset 4, imm_len 4)
b800000000 => b8000000c3 (offset 4, imm_len 4)
Modified 31 immediates
0x0000000000400563 (2 ): PUSHA; RET;  (60c3)
0x000000000040056a (2 ): PUSHA; RET;  (60c3)
0x0000000000400568 (4 ): SBB [EBX],CL; PUSHA; RET;  (180b60c3)
0x0000000000400577 (3 ): ADD [EAX],AL; RET;  (0000c3)
0x0000000000400583 (2 ): PUSHA; RET;  (60c3)
0x0000000000400581 (4 ): SBB [EBX],CL; PUSHA; RET;  (180b60c3)
0x000000000040057e (7 ): ADC [EBP-0x41],EBX; SBB [EBX],CL; PUSHA; RET;  (115dbf180b60c3)
0x000000000040057c (9 ): SAL BYTE [ECX+EDX+0x5d],0xbf; SBB [EBX],CL; PUSHA; RET;  (c074115dbf180b60c3)
0x0000000000400584 (14): RET; JMP EAX; NOP WORD [EAX+EAX+0x0]; POP EBP; RET;  (c3ffe0660f1f8400000000005dc3)
0x0000000000400582 (16): OR ESP,[EAX-0x3d]; JMP EAX; NOP WORD [EAX+EAX+0x0]; POP EBP; RET;  (0b60c3ffe0660f1f8400000000005dc3)
0x0000000000400580 (18): MOV EDI,0xc3600b18; JMP EAX; NOP WORD [EAX+EAX+0x0]; POP EBP; RET;  (bf180b60c3ffe0660f1f8400000000005dc3)
0x00000000004005a3 (2 ): PUSHA; RET;  (60c3)
0x00000000004005a1 (4 ): SBB [EBX],CL; PUSHA; RET;  (180b60c3)
0x00000000004005ab (2 ): PUSHA; RET;  (60c3)
0x00000000004005a9 (4 ): SBB [EBX],CL; PUSHA; RET;  (180b60c3)
0x00000000004005a8 (5 ): OUT DX,AL; SBB [EBX],CL; PUSHA; RET;  (ee180b60c3)
0x00000000004005c5 (3 ): ADD [EAX],AL; RET;  (0000c3)
0x00000000004005c2 (6 ): ADC EAX,0xb8; RET;  (15b8000000c3)
0x00000000004005d1 (2 ): PUSHA; RET;  (60c3)
0x00000000004005cf (4 ): SBB [EBX],CL; PUSHA; RET;  (180b60c3)
0x00000000004005cc (7 ): OR EBX,[EBP-0x41]; SBB [EBX],CL; PUSHA; RET;  (0b5dbf180b60c3)
0x00000000004005ca (9 ): SAL BYTE [EBX+ECX+0x5d],0xbf; SBB [EBX],CL; PUSHA; RET;  (c0740b5dbf180b60c3)
0x00000000004005d2 (8 ): RET; JMP EAX; NOP DWORD [EAX]; POP EBP; RET;  (c3ffe00f1f005dc3)
0x00000000004005d0 (10): OR ESP,[EAX-0x3d]; JMP EAX; NOP DWORD [EAX]; POP EBP; RET;  (0b60c3ffe00f1f005dc3)
0x00000000004005ce (12): MOV EDI,0xc3600b18; JMP EAX; NOP DWORD [EAX]; POP EBP; RET;  (bf180b60c3ffe00f1f005dc3)
0x0000000000400603 (2 ): PUSHA; RET;  (60c3)
0x0000000000400601 (4 ): FMUL DWORD [EAX]; PUSHA; RET;  (d80860c3)
0x0000000000400612 (3 ): ADD [EAX],AL; RET;  (0000c3)
0x000000000040063e (3 ): ADD [EAX],AL; RET;  (0000c3)
0x0000000000400643 (3 ): ADD [EAX],AL; RET;  (0000c3)
0x0000000000400648 (3 ): ADD [EAX],AL; RET;  (0000c3)
0x000000000040064d (3 ): ADD [EAX],AL; RET;  (0000c3)
0x0000000000400652 (3 ): ADD [EAX],AL; RET;  (0000c3)
0x000000000040065c (3 ): ADD [EAX],AL; RET;  (0000c3)
0x0000000000400662 (2 ): INC EAX; RET;  (40c3)
0x0000000000400661 (3 ): POP ES; INC EAX; RET;  (0740c3)
0x0000000000400667 (2 ): INC EAX; RET;  (40c3)
0x0000000000400666 (3 ): POP ES; INC EAX; RET;  (0740c3)
0x0000000000400665 (4 ): IMUL EAX,[EDI],0x40; RET;  (6b0740c3)
0x0000000000400660 (9 ): PUSH DWORD 0xbfc34007; IMUL EAX,[EDI],0x40; RET;  (680740c3bf6b0740c3)
0x000000000040066b (3 ): ADD [EAX],AL; RET;  (0000c3)
0x0000000000400677 (3 ): ADD [EAX],AL; RET;  (0000c3)
0x0000000000400687 (3 ): ADD [EAX],AL; RET;  (0000c3)
0x0000000000400681 (9 ): DEC DWORD [EBX+0xb9fc45]; ADD [EAX],AL; RET;  (ff8b45fcb9000000c3)
0x000000000040068c (3 ): ADD [EAX],AL; RET;  (0000c3)
0x0000000000400693 (3 ): ADD [EAX],AL; RET;  (0000c3)
0x0000000000400698 (3 ): ADD [EAX],AL; RET;  (0000c3)
0x00000000004006ae (2 ): INC EAX; RET;  (40c3)
0x00000000004006ad (3 ): POP ES; INC EAX; RET;  (0740c3)
0x00000000004006ac (4 ): JS 0x9; INC EAX; RET;  (780740c3)
0x00000000004006b2 (3 ): ADD [EAX],AL; RET;  (0000c3)
0x00000000004006bf (3 ): ADD [EAX],AL; RET;  (0000c3)
0x00000000004006b9 (9 ): DEC DWORD [EBX+0xb9fc45]; ADD [EAX],AL; RET;  (ff8b45fcb9000000c3)
0x00000000004006c4 (3 ): ADD [EAX],AL; RET;  (0000c3)
0x00000000004006cb (3 ): ADD [EAX],AL; RET;  (0000c3)
0x00000000004006ca (4 ): POP ES; ADD [EAX],AL; RET;  (070000c3)
0x00000000004006d0 (3 ): ADD [EAX],AL; RET;  (0000c3)
0x00000000004006da (3 ): ADD [EAX],AL; RET;  (0000c3)
0x00000000004006dc (3 ): RET; LEAVE; RET;  (c3c9c3)
0x00000000004006db (4 ): ADD BL,AL; LEAVE; RET;  (00c3c9c3)
0x00000000004006da (5 ): ADD [EAX],AL; RET; LEAVE; RET;  (0000c3c9c3)
0x00000000004006d9 (6 ): ADD [EAX],AL; ADD BL,AL; LEAVE; RET;  (000000c3c9c3)
0x00000000004006d8 (7 ): MOV EAX,0xc3000000; LEAVE; RET;  (b8000000c3c9c3)
0x00000000004006d3 (12): CALL 0xfffffe1d; MOV EAX,0xc3000000; LEAVE; RET;  (e818feffffb8000000c3c9c3)
0x00000000004006d2 (13): RET; CALL 0xfffffe1e; MOV EAX,0xc3000000; LEAVE; RET;  (c3e818feffffb8000000c3c9c3)
0x00000000004006d1 (14): ADD BL,AL; CALL 0xfffffe1f; MOV EAX,0xc3000000; LEAVE; RET;  (00c3e818feffffb8000000c3c9c3)
0x00000000004006ce (17): MOV EAX,0xc3000000; CALL 0xfffffe22; MOV EAX,0xc3000000; LEAVE; RET;  (b8000000c3e818feffffb8000000c3c9c3)
Protected 26 new locations in pass 3
******* Modified jump/call offsets *******
    *** Pass 0 ***
7405 => 74c3 (offset 1, off_len 1)
e843000000 => e8c3000000 (offset 1, off_len 4)
ff250c062000 => ff25c3062000 (offset 2, off_len 4)
ff250a062000 => ff25c3062000 (offset 2, off_len 4)
e9e0ffffff => e9c3ffffff (offset 1, off_len 4)
ff2502062000 => ff25c3062000 (offset 2, off_len 4)
e9d0ffffff => e9c3ffffff (offset 1, off_len 4)
ff25fa052000 => ff25c3052000 (offset 2, off_len 4)
e9c0ffffff => e9c3ffffff (offset 1, off_len 4)
ff25f2052000 => ff25c3052000 (offset 2, off_len 4)
e9b0ffffff => e9c3ffffff (offset 1, off_len 4)
ff25ea052000 => ff25c3052000 (offset 2, off_len 4)
e9a0ffffff => e9c3ffffff (offset 1, off_len 4)
ff25e2052000 => ff25c3052000 (offset 2, off_len 4)
e990ffffff => e9c3ffffff (offset 1, off_len 4)
ff25da052000 => ff25c3052000 (offset 2, off_len 4)
e980ffffff => e9c3ffffff (offset 1, off_len 4)
e877ffffff => e8c3ffffff (offset 1, off_len 4)
761b => 76c3 (offset 1, off_len 1)
7411 => 74c3 (offset 1, off_len 1)
ffe0 => c3ffe0 (offset 0, off_len 4)
7415 => 74c3 (offset 1, off_len 1)
740b => 74c3 (offset 1, off_len 1)
ffe0 => c3ffe0 (offset 0, off_len 4)
7511 => 75c3 (offset 1, off_len 1)
e86effffff => e8c3ffffff (offset 1, off_len 4)
7505 => 75c3 (offset 1, off_len 1)
eb93 => ebc3 (offset 1, off_len 1)
74f1 => 74c3 (offset 1, off_len 1)
ffd0 => c3ffd0 (offset 0, off_len 4)
e97affffff => e9c3ffffff (offset 1, off_len 4)
e8edfeffff => e8c3feffff (offset 1, off_len 4)
7539 => 75c3 (offset 1, off_len 1)
e896feffff => e8c3feffff (offset 1, off_len 4)
e88dfeffff => e8c3feffff (offset 1, off_len 4)
eb63 => ebc3 (offset 1, off_len 1)
e88efeffff => e8c3feffff (offset 1, off_len 4)
e850feffff => e8c3feffff (offset 1, off_len 4)
e806feffff => e8c3feffff (offset 1, off_len 4)
e818feffff => e8c3feffff (offset 1, off_len 4)
e875fdffff => e8c3fdffff (offset 1, off_len 4)
741e => 74c3 (offset 1, off_len 1)
41ff14dc => 41ff14c3 (offset 3, off_len 1)
75ea => 75c3 (offset 1, off_len 1)
Modified 44 offsets
0x000000000040062d (3 ): ADC AL,CH; RET;  (10e8c3)
0x000000000040062c (4 ): IN AL,DX; ADC AL,CH; RET;  (ec10e8c3)
0x0000000000400654 (3 ): ADD AL,CH; RET;  (00e8c3)
0x0000000000400652 (5 ): ADD [EAX],AL; ADD AL,CH; RET;  (000000e8c3)
0x000000000040066d (3 ): ADD AL,CH; RET;  (00e8c3)
0x000000000040066b (5 ): ADD [EAX],AL; ADD AL,CH; RET;  (000000e8c3)
0x000000000040069a (3 ): ADD AL,CH; RET;  (00e8c3)
0x0000000000400698 (5 ): ADD [EAX],AL; ADD AL,CH; RET;  (000000e8c3)
0x00000000004006b4 (3 ): ADD AL,CH; RET;  (00e8c3)
0x00000000004006b2 (5 ): ADD [EAX],AL; ADD AL,CH; RET;  (000000e8c3)
0x00000000004006d2 (3 ): ADD AL,CH; RET;  (00e8c3)
0x00000000004006d0 (5 ): ADD [EAX],AL; ADD AL,CH; RET;  (000000e8c3)
0x00000000004006d3 (12): CALL 0xfffffec8; MOV EAX,0x0; LEAVE; RET;  (e8c3feffffb800000000c9c3)
0x00000000004006d1 (14): ADD [EAX],AL; CALL 0xfffffeca; MOV EAX,0x0; LEAVE; RET;  (0000e8c3feffffb800000000c9c3)
0x00000000004006ce (17): MOV EAX,0x0; CALL 0xfffffecd; MOV EAX,0x0; LEAVE; RET;  (b800000000e8c3feffffb800000000c9c3)
0x00000000004006cd (18): ADD [EAX+0x0],BH; CALL 0xfffffece; MOV EAX,0x0; LEAVE; RET;  (00b800000000e8c3feffffb800000000c9c3)
0x000000000040070d (3 ): OR AL,CH; RET;  (08e8c3)
0x000000000040070c (4 ): IN AL,DX; OR AL,CH; RET;  (ec08e8c3)
0x0000000000400709 (7 ): ADD ECX,[EAX-0x7d]; IN AL,DX; OR AL,CH; RET;  (034883ec08e8c3)
0x0000000000400708 (8 ): STD; ADD ECX,[EAX-0x7d]; IN AL,DX; OR AL,CH; RET;  (fd034883ec08e8c3)
0x0000000000400733 (3 ): JMP 0x77; RET;  (eb75c3)
0x0000000000400730 (6 ): ADD [EAX+0x39],ECX; JMP 0x7a; RET;  (014839eb75c3)
0x000000000040072f (7 ): RET; ADD [EAX+0x39],ECX; JMP 0x7b; RET;  (c3014839eb75c3)
0x00000000004005d0 (4 ): OR ESP,[EAX+0x0]; RET;  (0b6000c3)
0x00000000004005ce (6 ): MOV EDI,0x600b18; RET;  (bf180b6000c3)
0x00000000004005cd (7 ): POP EBP; MOV EDI,0x600b18; RET;  (5dbf180b6000c3)
0x00000000004005cc (8 ): RET; POP EBP; MOV EDI,0x600b18; RET;  (c35dbf180b6000c3)
0x00000000004005cb (9 ): JZ 0xffffffc5; POP EBP; MOV EDI,0x600b18; RET;  (74c35dbf180b6000c3)
0x00000000004005c9 (11): TEST EAX,EAX; JZ 0xffffffc7; POP EBP; MOV EDI,0x600b18; RET;  (85c074c35dbf180b6000c3)
0x0000000000400499 (9 ): RET; ADD [EAX],AL; ADD [EAX-0x7d],CL; LES ECX,[EAX]; RET;  (c30000004883c408c3)
0x0000000000400498 (10): CALL 0xc8; DEC EAX; ADD ESP,0x8; RET;  (e8c30000004883c408c3)
0x0000000000400497 (11): RET; CALL 0xc9; DEC EAX; ADD ESP,0x8; RET;  (c3e8c30000004883c408c3)
0x0000000000400496 (12): JZ 0xffffffc5; CALL 0xca; DEC EAX; ADD ESP,0x8; RET;  (74c3e8c30000004883c408c3)
0x0000000000400495 (13): SAL BYTE [EBX+EAX*8-0x18],0xc3; ADD [EAX],AL; ADD [EAX-0x7d],CL; LES ECX,[EAX]; RET;  (c074c3e8c30000004883c408c3)
0x00000000004004ca (3 ): ADD CL,CH; RET;  (00e9c3)
0x00000000004004c8 (5 ): ADD [EAX],AL; ADD CL,CH; RET;  (000000e9c3)
0x00000000004004c5 (8 ): ADD [EAX+0x0],CH; ADD [EAX],AL; ADD CL,CH; RET;  (006800000000e9c3)
0x00000000004004da (3 ): ADD CL,CH; RET;  (00e9c3)
0x00000000004004d8 (5 ): ADD [EAX],AL; ADD CL,CH; RET;  (000000e9c3)
0x00000000004004d5 (8 ): ADD [EAX+0x1],CH; ADD [EAX],AL; ADD CL,CH; RET;  (006801000000e9c3)
0x00000000004004ea (3 ): ADD CL,CH; RET;  (00e9c3)
0x00000000004004e8 (5 ): ADD [EAX],AL; ADD CL,CH; RET;  (000000e9c3)
0x00000000004004e5 (8 ): ADD [EAX+0x2],CH; ADD [EAX],AL; ADD CL,CH; RET;  (006802000000e9c3)
0x00000000004004e3 (10): ADD EAX,0x2680020; ADD [EAX],AL; ADD CL,CH; RET;  (0520006802000000e9c3)
0x00000000004004e2 (11): RET; ADD EAX,0x2680020; ADD [EAX],AL; ADD CL,CH; RET;  (c30520006802000000e9c3)
0x00000000004004fa (3 ): ADD CL,CH; RET;  (00e9c3)
0x00000000004004f8 (5 ): ADD [EAX],AL; ADD CL,CH; RET;  (000000e9c3)
0x00000000004004f5 (8 ): ADD [EAX+0x3],CH; ADD [EAX],AL; ADD CL,CH; RET;  (006803000000e9c3)
0x00000000004004f3 (10): ADD EAX,0x3680020; ADD [EAX],AL; ADD CL,CH; RET;  (0520006803000000e9c3)
0x00000000004004f2 (11): RET; ADD EAX,0x3680020; ADD [EAX],AL; ADD CL,CH; RET;  (c30520006803000000e9c3)
0x000000000040050a (3 ): ADD CL,CH; RET;  (00e9c3)
0x0000000000400508 (5 ): ADD [EAX],AL; ADD CL,CH; RET;  (000000e9c3)
0x0000000000400505 (8 ): ADD [EAX+0x4],CH; ADD [EAX],AL; ADD CL,CH; RET;  (006804000000e9c3)
0x0000000000400503 (10): ADD EAX,0x4680020; ADD [EAX],AL; ADD CL,CH; RET;  (0520006804000000e9c3)
0x0000000000400502 (11): RET; ADD EAX,0x4680020; ADD [EAX],AL; ADD CL,CH; RET;  (c30520006804000000e9c3)
0x000000000040051a (3 ): ADD CL,CH; RET;  (00e9c3)
0x0000000000400518 (5 ): ADD [EAX],AL; ADD CL,CH; RET;  (000000e9c3)
0x0000000000400517 (6 ): ADD EAX,0xe9000000; RET;  (05000000e9c3)
0x0000000000400515 (8 ): ADD [EAX+0x5],CH; ADD [EAX],AL; ADD CL,CH; RET;  (006805000000e9c3)
0x0000000000400513 (10): ADD EAX,0x5680020; ADD [EAX],AL; ADD CL,CH; RET;  (0520006805000000e9c3)
0x0000000000400512 (11): RET; ADD EAX,0x5680020; ADD [EAX],AL; ADD CL,CH; RET;  (c30520006805000000e9c3)
0x000000000040052a (3 ): ADD CL,CH; RET;  (00e9c3)
0x0000000000400528 (5 ): ADD [EAX],AL; ADD CL,CH; RET;  (000000e9c3)
0x0000000000400527 (6 ): PUSH ES; ADD [EAX],AL; ADD CL,CH; RET;  (06000000e9c3)
0x0000000000400525 (8 ): ADD [EAX+0x6],CH; ADD [EAX],AL; ADD CL,CH; RET;  (006806000000e9c3)
0x0000000000400523 (10): ADD EAX,0x6680020; ADD [EAX],AL; ADD CL,CH; RET;  (0520006806000000e9c3)
0x0000000000400522 (11): RET; ADD EAX,0x6680020; ADD [EAX],AL; ADD CL,CH; RET;  (c30520006806000000e9c3)
0x0000000000400553 (3 ): ADD AL,CH; RET;  (00e8c3)
0x0000000000400552 (4 ): INC EAX; ADD AL,CH; RET;  (4000e8c3)
0x0000000000400551 (5 ): PUSH ES; INC EAX; ADD AL,CH; RET;  (064000e8c3)
0x0000000000400550 (6 ): PUSH ES; INC EAX; ADD AL,CH; RET;  (26064000e8c3)
0x0000000000400572 (3 ): IN EAX,0x76; RET;  (e576c3)
0x0000000000400582 (4 ): OR ESP,[EAX+0x0]; RET;  (0b6000c3)
0x0000000000400580 (6 ): MOV EDI,0x600b18; RET;  (bf180b6000c3)
0x000000000040057f (7 ): POP EBP; MOV EDI,0x600b18; RET;  (5dbf180b6000c3)
0x000000000040057e (8 ): RET; POP EBP; MOV EDI,0x600b18; RET;  (c35dbf180b6000c3)
0x000000000040057d (9 ): JZ 0xffffffc5; POP EBP; MOV EDI,0x600b18; RET;  (74c35dbf180b6000c3)
0x000000000040057b (11): TEST EAX,EAX; JZ 0xffffffc7; POP EBP; MOV EDI,0x600b18; RET;  (85c074c35dbf180b6000c3)
0x00000000004005e3 (6 ): ADD EAX,0x75000020; RET;  (0520000075c3)
0x00000000004005e2 (7 ): XOR [0x75000020],EAX; RET;  (310520000075c3)
0x00000000004005ec (3 ): IN EAX,0xe8; RET;  (e5e8c3)
0x00000000004005ed (15): CALL 0xffffffc8; POP EBP; MOV BYTE [0x20051e],0x1; RET;  (e8c3ffffff5dc6051e05200001f3c3)
0x00000000004005eb (17): MOV EBP,ESP; CALL 0xffffffca; POP EBP; MOV BYTE [0x20051e],0x1; RET;  (89e5e8c3ffffff5dc6051e05200001f3c3)
0x000000000040061c (3 ): MOV EBP,ESP; RET;  (89e5c3)
0x000000000040061b (4 ): DEC EAX; MOV EBP,ESP; RET;  (4889e5c3)
0x000000000040061a (5 ): PUSH EBP; DEC EAX; MOV EBP,ESP; RET;  (554889e5c3)
0x0000000000400619 (6 ): RET; PUSH EBP; DEC EAX; MOV EBP,ESP; RET;  (c3554889e5c3)
0x0000000000400618 (7 ): JZ 0xffffffc5; PUSH EBP; DEC EAX; MOV EBP,ESP; RET;  (74c3554889e5c3)
0x0000000000400617 (8 ): SAL BYTE [EBX+EAX*8+0x55],0x48; MOV EBP,ESP; RET;  (c074c3554889e5c3)
0x0000000000400614 (11): ADD [EAX-0x7b],CL; SAL BYTE [EBX+EAX*8+0x55],0x48; MOV EBP,ESP; RET;  (004885c074c3554889e5c3)
0x0000000000400612 (13): ADD [EAX],AL; ADD [EAX-0x7b],CL; SAL BYTE [EBX+EAX*8+0x55],0x48; MOV EBP,ESP; RET;  (0000004885c074c3554889e5c3)
Protected 209 new locations in pass 0
    *** Pass 1 ***
e843000000 => e843c30000 (offset 2, off_len 4)
ff250c062000 => ff250cc32000 (offset 3, off_len 4)
ff250a062000 => ff250ac32000 (offset 3, off_len 4)
e9e0ffffff => e9e0c3ffff (offset 2, off_len 4)
ff2502062000 => ff2502c32000 (offset 3, off_len 4)
e9d0ffffff => e9d0c3ffff (offset 2, off_len 4)
ff25fa052000 => ff25fac32000 (offset 3, off_len 4)
e9c0ffffff => e9c0c3ffff (offset 2, off_len 4)
ff25f2052000 => ff25f2c32000 (offset 3, off_len 4)
e9b0ffffff => e9b0c3ffff (offset 2, off_len 4)
ff25ea052000 => ff25eac32000 (offset 3, off_len 4)
e9a0ffffff => e9a0c3ffff (offset 2, off_len 4)
ff25e2052000 => ff25e2c32000 (offset 3, off_len 4)
e990ffffff => e990c3ffff (offset 2, off_len 4)
ff25da052000 => ff25dac32000 (offset 3, off_len 4)
e980ffffff => e980c3ffff (offset 2, off_len 4)
e877ffffff => e877c3ffff (offset 2, off_len 4)
ffe0 => c3ffe0 (offset 0, off_len 4)
ffe0 => c3ffe0 (offset 0, off_len 4)
e86effffff => e86ec3ffff (offset 2, off_len 4)
ffd0 => c3ffd0 (offset 0, off_len 4)
e97affffff => e97ac3ffff (offset 2, off_len 4)
e8edfeffff => e8edc3ffff (offset 2, off_len 4)
e896feffff => e896c3ffff (offset 2, off_len 4)
e88dfeffff => e88dc3ffff (offset 2, off_len 4)
e88efeffff => e88ec3ffff (offset 2, off_len 4)
e850feffff => e850c3ffff (offset 2, off_len 4)
e806feffff => e806c3ffff (offset 2, off_len 4)
e818feffff => e818c3ffff (offset 2, off_len 4)
e875fdffff => e875c3ffff (offset 2, off_len 4)
Modified 30 offsets
0x000000000040062f (2 ): IN EAX,DX; RET;  (edc3)
0x000000000040062d (4 ): ADC AL,CH; IN EAX,DX; RET;  (10e8edc3)
0x000000000040062c (5 ): IN AL,DX; ADC AL,CH; IN EAX,DX; RET;  (ec10e8edc3)
0x0000000000400656 (2 ): XCHG ESI,EAX; RET;  (96c3)
0x0000000000400654 (4 ): ADD AL,CH; XCHG ESI,EAX; RET;  (00e896c3)
0x0000000000400652 (6 ): ADD [EAX],AL; ADD AL,CH; XCHG ESI,EAX; RET;  (000000e896c3)
0x000000000040069c (2 ): PUSH EAX; RET;  (50c3)
0x000000000040069a (4 ): ADD AL,CH; PUSH EAX; RET;  (00e850c3)
0x0000000000400698 (6 ): ADD [EAX],AL; ADD AL,CH; PUSH EAX; RET;  (000000e850c3)
0x00000000004006b6 (2 ): PUSH ES; RET;  (06c3)
0x00000000004006b4 (4 ): ADD AL,CH; PUSH ES; RET;  (00e806c3)
0x00000000004006b2 (6 ): ADD [EAX],AL; ADD AL,CH; PUSH ES; RET;  (000000e806c3)
0x00000000004006d3 (12): CALL 0xffffc31d; MOV EAX,0x0; LEAVE; RET;  (e818c3ffffb800000000c9c3)
0x00000000004006d1 (14): ADD [EAX],AL; CALL 0xffffc31f; MOV EAX,0x0; LEAVE; RET;  (0000e818c3ffffb800000000c9c3)
0x00000000004006ce (17): MOV EAX,0x0; CALL 0xffffc322; MOV EAX,0x0; LEAVE; RET;  (b800000000e818c3ffffb800000000c9c3)
0x00000000004006cd (18): ADD [EAX+0x0],BH; CALL 0xffffc323; MOV EAX,0x0; LEAVE; RET;  (00b800000000e818c3ffffb800000000c9c3)
0x00000000004005d0 (4 ): OR ESP,[EAX+0x0]; RET;  (0b6000c3)
0x00000000004005ce (6 ): MOV EDI,0x600b18; RET;  (bf180b6000c3)
0x00000000004005cd (7 ): POP EBP; MOV EDI,0x600b18; RET;  (5dbf180b6000c3)
0x00000000004005cb (9 ): JZ 0xd; POP EBP; MOV EDI,0x600b18; RET;  (740b5dbf180b6000c3)
0x00000000004005c9 (11): TEST EAX,EAX; JZ 0xf; POP EBP; MOV EDI,0x600b18; RET;  (85c0740b5dbf180b6000c3)
0x0000000000400499 (2 ): INC EBX; RET;  (43c3)
0x0000000000400495 (6 ): SAL BYTE [EBP+EAX-0x18],0x43; RET;  (c07405e843c3)
0x0000000000400492 (9 ): ADD [EAX-0x7b],CL; SAL BYTE [EBP+EAX-0x18],0x43; RET;  (004885c07405e843c3)
0x000000000040047f (2 ): INC EBX; RET;  (43c3)
0x000000000040049a (8 ): RET; ADD [EAX],AL; DEC EAX; ADD ESP,0x8; RET;  (c300004883c408c3)
0x0000000000400498 (10): CALL 0xc348; DEC EAX; ADD ESP,0x8; RET;  (e843c300004883c408c3)
0x0000000000400497 (11): ADD EAX,0xc343e8; ADD [EAX-0x7d],CL; LES ECX,[EAX]; RET;  (05e843c300004883c408c3)
0x0000000000400496 (12): JZ 0x7; CALL 0xc34a; DEC EAX; ADD ESP,0x8; RET;  (7405e843c300004883c408c3)
0x00000000004004e2 (2 ): CLI; RET;  (fac3)
0x000000000040051c (2 ): NOP; RET;  (90c3)
0x000000000040051a (4 ): ADD CL,CH; NOP; RET;  (00e990c3)
0x0000000000400518 (6 ): ADD [EAX],AL; ADD CL,CH; NOP; RET;  (000000e990c3)
0x0000000000400517 (7 ): ADD EAX,0xe9000000; NOP; RET;  (05000000e990c3)
0x0000000000400515 (9 ): ADD [EAX+0x5],CH; ADD [EAX],AL; ADD CL,CH; NOP; RET;  (006805000000e990c3)
0x0000000000400582 (4 ): OR ESP,[EAX+0x0]; RET;  (0b6000c3)
0x0000000000400580 (6 ): MOV EDI,0x600b18; RET;  (bf180b6000c3)
0x000000000040057f (7 ): POP EBP; MOV EDI,0x600b18; RET;  (5dbf180b6000c3)
0x000000000040057d (9 ): JZ 0x13; POP EBP; MOV EDI,0x600b18; RET;  (74115dbf180b6000c3)
0x000000000040057b (11): TEST EAX,EAX; JZ 0x15; POP EBP; MOV EDI,0x600b18; RET;  (85c074115dbf180b6000c3)
0x00000000004005ee (2 ): OUTS DX,BYTE [ESI]; RET;  (6ec3)
0x00000000004005ec (4 ): IN EAX,0xe8; OUTS DX,BYTE [ESI]; RET;  (e5e86ec3)
0x00000000004005ed (15): CALL 0xffffc373; POP EBP; MOV BYTE [0x20051e],0x1; RET;  (e86ec3ffff5dc6051e05200001f3c3)
0x00000000004005eb (17): MOV EBP,ESP; CALL 0xffffc375; POP EBP; MOV BYTE [0x20051e],0x1; RET;  (89e5e86ec3ffff5dc6051e05200001f3c3)
0x000000000040061c (3 ): MOV EBP,ESP; RET;  (89e5c3)
0x000000000040061b (4 ): DEC EAX; MOV EBP,ESP; RET;  (4889e5c3)
0x000000000040061a (5 ): PUSH EBP; DEC EAX; MOV EBP,ESP; RET;  (554889e5c3)
0x0000000000400619 (6 ): INT1; PUSH EBP; DEC EAX; MOV EBP,ESP; RET;  (f1554889e5c3)
0x0000000000400618 (7 ): JZ 0xfffffff3; PUSH EBP; DEC EAX; MOV EBP,ESP; RET;  (74f1554889e5c3)
0x0000000000400617 (8 ): SAL BYTE [ECX+ESI*8+0x55],0x48; MOV EBP,ESP; RET;  (c074f1554889e5c3)
0x0000000000400614 (11): ADD [EAX-0x7b],CL; SAL BYTE [ECX+ESI*8+0x55],0x48; MOV EBP,ESP; RET;  (004885c074f1554889e5c3)
0x0000000000400612 (13): ADD [EAX],AL; ADD [EAX-0x7b],CL; SAL BYTE [ECX+ESI*8+0x55],0x48; MOV EBP,ESP; RET;  (0000004885c074f1554889e5c3)
Protected 10 new locations in pass 1
    *** Pass 2 ***
e843000000 => e84300c300 (offset 3, off_len 4)
ff250c062000 => ff250c06c300 (offset 4, off_len 4)
ff250a062000 => ff250a06c300 (offset 4, off_len 4)
e9e0ffffff => e9e0ffc3ff (offset 3, off_len 4)
ff2502062000 => ff250206c300 (offset 4, off_len 4)
e9d0ffffff => e9d0ffc3ff (offset 3, off_len 4)
ff25fa052000 => ff25fa05c300 (offset 4, off_len 4)
e9c0ffffff => e9c0ffc3ff (offset 3, off_len 4)
ff25f2052000 => ff25f205c300 (offset 4, off_len 4)
e9b0ffffff => e9b0ffc3ff (offset 3, off_len 4)
ff25ea052000 => ff25ea05c300 (offset 4, off_len 4)
e9a0ffffff => e9a0ffc3ff (offset 3, off_len 4)
ff25e2052000 => ff25e205c300 (offset 4, off_len 4)
e990ffffff => e990ffc3ff (offset 3, off_len 4)
ff25da052000 => ff25da05c300 (offset 4, off_len 4)
e980ffffff => e980ffc3ff (offset 3, off_len 4)
e877ffffff => e877ffc3ff (offset 3, off_len 4)
ffe0 => c3e0 (offset 0, off_len 4)
ffe0 => c3e0 (offset 0, off_len 4)
e86effffff => e86effc3ff (offset 3, off_len 4)
ffd0 => c3d0 (offset 0, off_len 4)
e97affffff => e97affc3ff (offset 3, off_len 4)
e8edfeffff => e8edfec3ff (offset 3, off_len 4)
e896feffff => e896fec3ff (offset 3, off_len 4)
e88dfeffff => e88dfec3ff (offset 3, off_len 4)
e88efeffff => e88efec3ff (offset 3, off_len 4)
e850feffff => e850fec3ff (offset 3, off_len 4)
e806feffff => e806fec3ff (offset 3, off_len 4)
e818feffff => e818fec3ff (offset 3, off_len 4)
e875fdffff => e875fdc3ff (offset 3, off_len 4)
Modified 30 offsets
0x000000000040049b (7 ): RET; ADD [EAX-0x7d],CL; LES ECX,[EAX]; RET;  (c3004883c408c3)
0x000000000040049a (8 ): ADD BL,AL; ADD [EAX-0x7d],CL; LES ECX,[EAX]; RET;  (00c3004883c408c3)
0x0000000000400499 (9 ): INC EBX; ADD BL,AL; ADD [EAX-0x7d],CL; LES ECX,[EAX]; RET;  (4300c3004883c408c3)
0x0000000000400498 (10): CALL 0xc30048; DEC EAX; ADD ESP,0x8; RET;  (e84300c3004883c408c3)
0x0000000000400497 (11): ADD EAX,0xc30043e8; ADD [EAX-0x7d],CL; LES ECX,[EAX]; RET;  (05e84300c3004883c408c3)
0x0000000000400496 (12): JZ 0x7; CALL 0xc3004a; DEC EAX; ADD ESP,0x8; RET;  (7405e84300c3004883c408c3)
0x0000000000400495 (13): SAL BYTE [EBP+EAX-0x18],0x43; ADD BL,AL; ADD [EAX-0x7d],CL; LES ECX,[EAX]; RET;  (c07405e84300c3004883c408c3)
0x00000000004004b9 (2 ): PUSH ES; RET;  (06c3)
0x00000000004004b8 (3 ): OR AL,0x6; RET;  (0c06c3)
0x00000000004004c3 (2 ): PUSH ES; RET;  (06c3)
0x00000000004004c2 (3 ): OR AL,[ESI]; RET;  (0a06c3)
0x00000000004004cc (3 ): LOOPNZ 0x1; RET;  (e0ffc3)
0x00000000004004ca (5 ): ADD CL,CH; LOOPNZ 0x3; RET;  (00e9e0ffc3)
0x00000000004004c8 (7 ): ADD [EAX],AL; ADD CL,CH; LOOPNZ 0x5; RET;  (000000e9e0ffc3)
0x00000000004004c5 (10): ADD [EAX+0x0],CH; ADD [EAX],AL; ADD CL,CH; LOOPNZ 0x8; RET;  (006800000000e9e0ffc3)
0x00000000004004d3 (2 ): PUSH ES; RET;  (06c3)
0x00000000004004d2 (3 ): ADD AL,[ESI]; RET;  (0206c3)
0x00000000004004dc (3 ): SAR BH,0x1; RET;  (d0ffc3)
0x00000000004004da (5 ): ADD CL,CH; SAR BH,0x1; RET;  (00e9d0ffc3)
0x00000000004004d8 (7 ): ADD [EAX],AL; ADD CL,CH; SAR BH,0x1; RET;  (000000e9d0ffc3)
0x00000000004004d5 (10): ADD [EAX+0x1],CH; ADD [EAX],AL; ADD CL,CH; SAR BH,0x1; RET;  (006801000000e9d0ffc3)
0x00000000004004fc (3 ): MOV AL,0xff; RET;  (b0ffc3)
0x00000000004004fa (5 ): ADD CL,CH; MOV AL,0xff; RET;  (00e9b0ffc3)
0x00000000004004f8 (7 ): ADD [EAX],AL; ADD CL,CH; MOV AL,0xff; RET;  (000000e9b0ffc3)
0x00000000004004f5 (10): ADD [EAX+0x3],CH; ADD [EAX],AL; ADD CL,CH; MOV AL,0xff; RET;  (006803000000e9b0ffc3)
0x00000000004004f3 (12): ADD EAX,0x36800c3; ADD [EAX],AL; ADD CL,CH; MOV AL,0xff; RET;  (05c3006803000000e9b0ffc3)
0x00000000004004f2 (13): ADD EAX,0x36800c3; ADD [EAX],AL; ADD CL,CH; MOV AL,0xff; RET;  (f205c3006803000000e9b0ffc3)
0x0000000000400512 (3 ): LOOP 0x7; RET;  (e205c3)
0x0000000000400555 (3 ): JA 0x1; RET;  (77ffc3)
0x0000000000400553 (5 ): ADD AL,CH; JA 0x3; RET;  (00e877ffc3)
0x0000000000400552 (6 ): INC EAX; ADD AL,CH; JA 0x4; RET;  (4000e877ffc3)
0x0000000000400551 (7 ): PUSH ES; INC EAX; ADD AL,CH; JA 0x5; RET;  (064000e877ffc3)
0x0000000000400550 (8 ): PUSH ES; INC EAX; ADD AL,CH; JA 0x6; RET;  (26064000e877ffc3)
0x0000000000400582 (4 ): OR ESP,[EAX+0x0]; RET;  (0b6000c3)
0x0000000000400580 (6 ): MOV EDI,0x600b18; RET;  (bf180b6000c3)
0x000000000040057f (7 ): POP EBP; MOV EDI,0x600b18; RET;  (5dbf180b6000c3)
0x000000000040057d (9 ): JZ 0x13; POP EBP; MOV EDI,0x600b18; RET;  (74115dbf180b6000c3)
0x000000000040057b (11): TEST EAX,EAX; JZ 0x15; POP EBP; MOV EDI,0x600b18; RET;  (85c074115dbf180b6000c3)
0x0000000000400585 (13): RET; LOOPNZ 0x69; NOP DWORD [EAX+EAX+0x0]; POP EBP; RET;  (c3e0660f1f8400000000005dc3)
0x0000000000400584 (14): ADD BL,AL; LOOPNZ 0x6a; NOP DWORD [EAX+EAX+0x0]; POP EBP; RET;  (00c3e0660f1f8400000000005dc3)
0x00000000004005d0 (4 ): OR ESP,[EAX+0x0]; RET;  (0b6000c3)
0x00000000004005ce (6 ): MOV EDI,0x600b18; RET;  (bf180b6000c3)
0x00000000004005cd (7 ): POP EBP; MOV EDI,0x600b18; RET;  (5dbf180b6000c3)
0x00000000004005cb (9 ): JZ 0xd; POP EBP; MOV EDI,0x600b18; RET;  (740b5dbf180b6000c3)
0x00000000004005c9 (11): TEST EAX,EAX; JZ 0xf; POP EBP; MOV EDI,0x600b18; RET;  (85c0740b5dbf180b6000c3)
0x00000000004005f0 (12): RET; CALL FAR DWORD [EBP-0x3a]; ADD EAX,0x20051e; ADD EBX,ESI; RET;  (c3ff5dc6051e05200001f3c3)
0x00000000004005ef (13): INC EBX; CALL FAR DWORD [EBP-0x3a]; ADD EAX,0x20051e; ADD EBX,ESI; RET;  (ffc3ff5dc6051e05200001f3c3)
0x00000000004005ed (15): CALL 0xffc3ff73; POP EBP; MOV BYTE [0x20051e],0x1; RET;  (e86effc3ff5dc6051e05200001f3c3)
0x00000000004005eb (17): MOV EBP,ESP; CALL 0xffc3ff75; POP EBP; MOV BYTE [0x20051e],0x1; RET;  (89e5e86effc3ff5dc6051e05200001f3c3)
0x000000000040061c (3 ): MOV EBP,ESP; RET;  (89e5c3)
0x000000000040061b (4 ): DEC EAX; MOV EBP,ESP; RET;  (4889e5c3)
0x000000000040061a (5 ): PUSH EBP; DEC EAX; MOV EBP,ESP; RET;  (554889e5c3)
0x0000000000400619 (6 ): INT1; PUSH EBP; DEC EAX; MOV EBP,ESP; RET;  (f1554889e5c3)
0x0000000000400618 (7 ): JZ 0xfffffff3; PUSH EBP; DEC EAX; MOV EBP,ESP; RET;  (74f1554889e5c3)
0x0000000000400617 (8 ): SAL BYTE [ECX+ESI*8+0x55],0x48; MOV EBP,ESP; RET;  (c074f1554889e5c3)
0x0000000000400614 (11): ADD [EAX-0x7b],CL; SAL BYTE [ECX+ESI*8+0x55],0x48; MOV EBP,ESP; RET;  (004885c074f1554889e5c3)
0x0000000000400612 (13): ADD [EAX],AL; ADD [EAX-0x7b],CL; SAL BYTE [ECX+ESI*8+0x55],0x48; MOV EBP,ESP; RET;  (0000004885c074f1554889e5c3)
0x0000000000400622 (3 ): JP 0x1; RET;  (7affc3)
0x000000000040061f (6 ): RCR BYTE [EBP-0x17],0x1; JP 0x4; RET;  (d05de97affc3)
0x000000000040061e (7 ): RET; RCR BYTE [EBP-0x17],0x1; JP 0x5; RET;  (c3d05de97affc3)
0x000000000040061d (8 ): IN EAX,0xc3; RCR BYTE [EBP-0x17],0x1; JP 0x6; RET;  (e5c3d05de97affc3)
0x000000000040061c (9 ): MOV EBP,ESP; RET; RCR BYTE [EBP-0x17],0x1; JP 0x7; RET;  (89e5c3d05de97affc3)
0x00000000004006d4 (3 ): SBB DH,BH; RET;  (18fec3)
0x00000000004006d2 (5 ): ADD AL,CH; SBB DH,BH; RET;  (00e818fec3)
0x00000000004006d0 (7 ): ADD [EAX],AL; ADD AL,CH; SBB DH,BH; RET;  (000000e818fec3)
0x00000000004006d3 (12): CALL 0xffc3fe1d; MOV EAX,0x0; LEAVE; RET;  (e818fec3ffb800000000c9c3)
0x00000000004006d1 (14): ADD [EAX],AL; CALL 0xffc3fe1f; MOV EAX,0x0; LEAVE; RET;  (0000e818fec3ffb800000000c9c3)
0x00000000004006ce (17): MOV EAX,0x0; CALL 0xffc3fe22; MOV EAX,0x0; LEAVE; RET;  (b800000000e818fec3ffb800000000c9c3)
0x00000000004006cd (18): ADD [EAX+0x0],BH; CALL 0xffc3fe23; MOV EAX,0x0; LEAVE; RET;  (00b800000000e818fec3ffb800000000c9c3)
0x0000000000400710 (2 ): STD; RET;  (fdc3)
0x000000000040070f (3 ): JNZ 0xffffffff; RET;  (75fdc3)
0x000000000040070d (5 ): OR AL,CH; JNZ 0x1; RET;  (08e875fdc3)
0x000000000040070c (6 ): IN AL,DX; OR AL,CH; JNZ 0x2; RET;  (ec08e875fdc3)
0x0000000000400709 (9 ): ADD ECX,[EAX-0x7d]; IN AL,DX; OR AL,CH; JNZ 0x5; RET;  (034883ec08e875fdc3)
Protected 37 new locations in pass 2
    *** Pass 3 ***
e843000000 => e8430000c3 (offset 4, off_len 4)
ff250c062000 => ff250c0620c3 (offset 5, off_len 4)
ff250a062000 => ff250a0620c3 (offset 5, off_len 4)
e9e0ffffff => e9e0ffffc3 (offset 4, off_len 4)
ff2502062000 => ff25020620c3 (offset 5, off_len 4)
e9d0ffffff => e9d0ffffc3 (offset 4, off_len 4)
ff25fa052000 => ff25fa0520c3 (offset 5, off_len 4)
e9c0ffffff => e9c0ffffc3 (offset 4, off_len 4)
ff25f2052000 => ff25f20520c3 (offset 5, off_len 4)
e9b0ffffff => e9b0ffffc3 (offset 4, off_len 4)
ff25ea052000 => ff25ea0520c3 (offset 5, off_len 4)
e9a0ffffff => e9a0ffffc3 (offset 4, off_len 4)
ff25e2052000 => ff25e20520c3 (offset 5, off_len 4)
e990ffffff => e990ffffc3 (offset 4, off_len 4)
ff25da052000 => ff25da0520c3 (offset 5, off_len 4)
e980ffffff => e980ffffc3 (offset 4, off_len 4)
e877ffffff => e877ffffc3 (offset 4, off_len 4)
ffe0 => ffc3 (offset 1, off_len 4)
ffe0 => ffc3 (offset 1, off_len 4)
e86effffff => e86effffc3 (offset 4, off_len 4)
ffd0 => ffc3 (offset 1, off_len 4)
e97affffff => e97affffc3 (offset 4, off_len 4)
e8edfeffff => e8edfeffc3 (offset 4, off_len 4)
e896feffff => e896feffc3 (offset 4, off_len 4)
e88dfeffff => e88dfeffc3 (offset 4, off_len 4)
e88efeffff => e88efeffc3 (offset 4, off_len 4)
e850feffff => e850feffc3 (offset 4, off_len 4)
e806feffff => e806feffc3 (offset 4, off_len 4)
e818feffff => e818feffc3 (offset 4, off_len 4)
e875fdffff => e875fdffc3 (offset 4, off_len 4)
Modified 30 offsets
0x000000000040049a (3 ): ADD [EAX],AL; RET;  (0000c3)
0x0000000000400499 (4 ): INC EBX; ADD [EAX],AL; RET;  (430000c3)
0x0000000000400497 (6 ): ADD EAX,0x43e8; RET;  (05e8430000c3)
0x0000000000400495 (8 ): SAL BYTE [EBP+EAX-0x18],0x43; ADD [EAX],AL; RET;  (c07405e8430000c3)
0x0000000000400492 (11): ADD [EAX-0x7b],CL; SAL BYTE [EBP+EAX-0x18],0x43; ADD [EAX],AL; RET;  (004885c07405e8430000c3)
0x0000000000400480 (3 ): ADD [EAX],AL; RET;  (0000c3)
0x000000000040049c (6 ): RET; DEC EAX; ADD ESP,0x8; RET;  (c34883c408c3)
0x000000000040049b (7 ): ADD BL,AL; DEC EAX; ADD ESP,0x8; RET;  (00c34883c408c3)
0x000000000040049a (8 ): ADD [EAX],AL; RET; DEC EAX; ADD ESP,0x8; RET;  (0000c34883c408c3)
0x0000000000400498 (10): CALL 0xc3000048; DEC EAX; ADD ESP,0x8; RET;  (e8430000c34883c408c3)
0x0000000000400497 (11): ADD EAX,0x43e8; RET; DEC EAX; ADD ESP,0x8; RET;  (05e8430000c34883c408c3)
0x0000000000400496 (12): JZ 0x7; CALL 0xc300004a; DEC EAX; ADD ESP,0x8; RET;  (7405e8430000c34883c408c3)
0x00000000004004ec (4 ): SAR BH,0xff; RET;  (c0ffffc3)
0x00000000004004ea (6 ): ADD CL,CH; SAR BH,0xff; RET;  (00e9c0ffffc3)
0x00000000004004e8 (8 ): ADD [EAX],AL; ADD CL,CH; SAR BH,0xff; RET;  (000000e9c0ffffc3)
0x00000000004004e3 (13): ADD EAX,0x268c320; ADD [EAX],AL; ADD CL,CH; SAR BH,0xff; RET;  (0520c36802000000e9c0ffffc3)
0x000000000040052c (4 ): CMP BH,0xff; RET;  (80ffffc3)
0x000000000040052a (6 ): ADD CL,CH; CMP BH,0xff; RET;  (00e980ffffc3)
0x0000000000400528 (8 ): ADD [EAX],AL; ADD CL,CH; CMP BH,0xff; RET;  (000000e980ffffc3)
0x0000000000400527 (9 ): PUSH ES; ADD [EAX],AL; ADD CL,CH; CMP BH,0xff; RET;  (06000000e980ffffc3)
0x0000000000400523 (13): ADD EAX,0x668c320; ADD [EAX],AL; ADD CL,CH; CMP BH,0xff; RET;  (0520c36806000000e980ffffc3)
0x0000000000400522 (14): FIADD DWORD [0x668c320]; ADD [EAX],AL; ADD CL,CH; CMP BH,0xff; RET;  (da0520c36806000000e980ffffc3)
0x0000000000400584 (3 ): ADD BH,BH; RET;  (00ffc3)
0x0000000000400583 (4 ): PUSHA; ADD BH,BH; RET;  (6000ffc3)
0x0000000000400581 (6 ): SBB [EBX],CL; PUSHA; ADD BH,BH; RET;  (180b6000ffc3)
0x000000000040057e (9 ): ADC [EBP-0x41],EBX; SBB [EBX],CL; PUSHA; ADD BH,BH; RET;  (115dbf180b6000ffc3)
0x000000000040057c (11): SAL BYTE [ECX+EDX+0x5d],0xbf; SBB [EBX],CL; PUSHA; ADD BH,BH; RET;  (c074115dbf180b6000ffc3)
0x0000000000400586 (12): RET; NOP WORD [EAX+EAX+0x0]; POP EBP; RET;  (c3660f1f8400000000005dc3)
0x0000000000400585 (13): INC EBX; NOP WORD [EAX+EAX+0x0]; POP EBP; RET;  (ffc3660f1f8400000000005dc3)
0x0000000000400584 (14): ADD BH,BH; RET; NOP WORD [EAX+EAX+0x0]; POP EBP; RET;  (00ffc3660f1f8400000000005dc3)
0x0000000000400582 (16): OR ESP,[EAX+0x0]; INC EBX; NOP WORD [EAX+EAX+0x0]; POP EBP; RET;  (0b6000ffc3660f1f8400000000005dc3)
0x0000000000400580 (18): MOV EDI,0x600b18; INC EBX; NOP WORD [EAX+EAX+0x0]; POP EBP; RET;  (bf180b6000ffc3660f1f8400000000005dc3)
0x00000000004005d2 (3 ): ADD BH,BH; RET;  (00ffc3)
0x00000000004005d1 (4 ): PUSHA; ADD BH,BH; RET;  (6000ffc3)
0x00000000004005cf (6 ): SBB [EBX],CL; PUSHA; ADD BH,BH; RET;  (180b6000ffc3)
0x00000000004005cc (9 ): OR EBX,[EBP-0x41]; SBB [EBX],CL; PUSHA; ADD BH,BH; RET;  (0b5dbf180b6000ffc3)
0x00000000004005ca (11): SAL BYTE [EBX+ECX+0x5d],0xbf; SBB [EBX],CL; PUSHA; ADD BH,BH; RET;  (c0740b5dbf180b6000ffc3)
0x00000000004005d4 (6 ): RET; NOP DWORD [EAX]; POP EBP; RET;  (c30f1f005dc3)
0x00000000004005d3 (7 ): INC EBX; NOP DWORD [EAX]; POP EBP; RET;  (ffc30f1f005dc3)
0x00000000004005d2 (8 ): ADD BH,BH; RET; NOP DWORD [EAX]; POP EBP; RET;  (00ffc30f1f005dc3)
0x00000000004005d0 (10): OR ESP,[EAX+0x0]; INC EBX; NOP DWORD [EAX]; POP EBP; RET;  (0b6000ffc30f1f005dc3)
0x00000000004005ce (12): MOV EDI,0x600b18; INC EBX; NOP DWORD [EAX]; POP EBP; RET;  (bf180b6000ffc30f1f005dc3)
0x00000000004005f1 (11): RET; POP EBP; MOV BYTE [0x20051e],0x1; RET;  (c35dc6051e05200001f3c3)
0x00000000004005f0 (12): INC EBX; POP EBP; MOV BYTE [0x20051e],0x1; RET;  (ffc35dc6051e05200001f3c3)
0x00000000004005ed (15): CALL 0xc3ffff73; POP EBP; MOV BYTE [0x20051e],0x1; RET;  (e86effffc35dc6051e05200001f3c3)
0x00000000004005eb (17): MOV EBP,ESP; CALL 0xc3ffff75; POP EBP; MOV BYTE [0x20051e],0x1; RET;  (89e5e86effffc35dc6051e05200001f3c3)
0x000000000040061d (3 ): IN EAX,0xff; RET;  (e5ffc3)
0x00000000004006d7 (8 ): RET; MOV EAX,0x0; LEAVE; RET;  (c3b800000000c9c3)
0x00000000004006d6 (9 ): INC EBX; MOV EAX,0x0; LEAVE; RET;  (ffc3b800000000c9c3)
0x00000000004006d4 (11): SBB DH,BH; INC EBX; MOV EAX,0x0; LEAVE; RET;  (18feffc3b800000000c9c3)
0x00000000004006d3 (12): CALL 0xc3fffe1d; MOV EAX,0x0; LEAVE; RET;  (e818feffc3b800000000c9c3)
0x00000000004006d1 (14): ADD [EAX],AL; CALL 0xc3fffe1f; MOV EAX,0x0; LEAVE; RET;  (0000e818feffc3b800000000c9c3)
0x00000000004006ce (17): MOV EAX,0x0; CALL 0xc3fffe22; MOV EAX,0x0; LEAVE; RET;  (b800000000e818feffc3b800000000c9c3)
0x00000000004006cd (18): ADD [EAX+0x0],BH; CALL 0xc3fffe23; MOV EAX,0x0; LEAVE; RET;  (00b800000000e818feffc3b800000000c9c3)
Protected 14 new locations in pass 3
******* Report *******

+--------------------------------------------------------------------+
|            |         bytes protectable by gadget type              |
| code bytes | existing | far return | immediate |  offset |     any |
+--------------------------------------------------------------------+
|        709 |      114 |          0 |       267 |     270 |     426 |
|            |    16.08 |       0.00 |     37.66 |   38.08 |   60.08 |
+--------------------------------------------------------------------+
