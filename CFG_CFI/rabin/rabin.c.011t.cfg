
;; Function search (search, funcdef_no=0, decl_uid=2367, symbol_order=0)

;; 5 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22
;;
;; Loop 3
;;  header 21, latch 20
;;  depth 1, outer 0
;;  nodes: 21 20 17 18 19 9 15 16 12 14 10 13 11
;;
;; Loop 4
;;  header 14, latch 13
;;  depth 2, outer 3
;;  nodes: 14 13 11
;;
;; Loop 2
;;  header 7, latch 6
;;  depth 1, outer 0
;;  nodes: 7 6
;;
;; Loop 1
;;  header 4, latch 3
;;  depth 1, outer 0
;;  nodes: 4 3
;; 2 succs { 4 }
;; 3 succs { 4 }
;; 4 succs { 3 5 }
;; 5 succs { 7 }
;; 6 succs { 7 }
;; 7 succs { 6 8 }
;; 8 succs { 21 }
;; 9 succs { 10 17 }
;; 10 succs { 14 }
;; 11 succs { 12 13 }
;; 12 succs { 15 }
;; 13 succs { 14 }
;; 14 succs { 11 15 }
;; 15 succs { 16 17 }
;; 16 succs { 17 }
;; 17 succs { 18 20 }
;; 18 succs { 19 20 }
;; 19 succs { 20 }
;; 20 succs { 21 }
;; 21 succs { 9 22 }
;; 22 succs { 1 }
search (char * pat, char * txt, int q)
{
  int h;
  int t;
  int p;
  int j;
  int i;
  int N;
  int M;
  int D.2441;
  int D.2438;
  int D.2437;
  char D.2436;
  char * D.2435;
  sizetype D.2434;
  int D.2433;
  int D.2432;
  int D.2431;
  int D.2430;
  int D.2429;
  char D.2428;
  char * D.2427;
  sizetype D.2426;
  int D.2423;
  char D.2418;
  char * D.2417;
  sizetype D.2416;
  char D.2415;
  char * D.2414;
  sizetype D.2413;
  int D.2412;
  int D.2409;
  int D.2408;
  char D.2407;
  char * D.2406;
  sizetype D.2405;
  int D.2404;
  int D.2403;
  int D.2402;
  char D.2401;
  char * D.2400;
  sizetype D.2399;
  int D.2398;
  int D.2397;
  int D.2396;
  long unsigned int D.2395;
  long unsigned int D.2394;

  <bb 2>:
  D.2394 = strlen (pat);
  M = (int) D.2394;
  D.2395 = strlen (txt);
  N = (int) D.2395;
  p = 0;
  t = 0;
  h = 1;
  i = 0;
  goto <bb 4>;

  <bb 3>:
  D.2396 = h * 256;
  h = D.2396 % q;
  i = i + 1;

  <bb 4>:
  D.2397 = M + -1;
  if (D.2397 > i)
    goto <bb 3>;
  else
    goto <bb 5>;

  <bb 5>:
  i = 0;
  goto <bb 7>;

  <bb 6>:
  D.2398 = p * 256;
  D.2399 = (sizetype) i;
  D.2400 = pat + D.2399;
  D.2401 = *D.2400;
  D.2402 = (int) D.2401;
  D.2403 = D.2398 + D.2402;
  p = D.2403 % q;
  D.2404 = t * 256;
  D.2405 = (sizetype) i;
  D.2406 = txt + D.2405;
  D.2407 = *D.2406;
  D.2408 = (int) D.2407;
  D.2409 = D.2404 + D.2408;
  t = D.2409 % q;
  i = i + 1;

  <bb 7>:
  if (i < M)
    goto <bb 6>;
  else
    goto <bb 8>;

  <bb 8>:
  i = 0;
  goto <bb 21>;

  <bb 9>:
  if (p == t)
    goto <bb 10>;
  else
    goto <bb 17>;

  <bb 10>:
  j = 0;
  goto <bb 14>;

  <bb 11>:
  D.2412 = i + j;
  D.2413 = (sizetype) D.2412;
  D.2414 = txt + D.2413;
  D.2415 = *D.2414;
  D.2416 = (sizetype) j;
  D.2417 = pat + D.2416;
  D.2418 = *D.2417;
  if (D.2415 != D.2418)
    goto <bb 12>;
  else
    goto <bb 13>;

  <bb 12>:
  goto <bb 15>;

  <bb 13>:
  j = j + 1;

  <bb 14>:
  if (j < M)
    goto <bb 11>;
  else
    goto <bb 15>;

  <bb 15>:
  if (j == M)
    goto <bb 16>;
  else
    goto <bb 17>;

  <bb 16>:
  printf ("Pattern found at index %d \n", i);

  <bb 17>:
  D.2423 = N - M;
  if (D.2423 > i)
    goto <bb 18>;
  else
    goto <bb 20>;

  <bb 18>:
  D.2426 = (sizetype) i;
  D.2427 = txt + D.2426;
  D.2428 = *D.2427;
  D.2429 = (int) D.2428;
  D.2430 = D.2429 * h;
  D.2431 = t - D.2430;
  D.2432 = D.2431 * 256;
  D.2433 = i + M;
  D.2434 = (sizetype) D.2433;
  D.2435 = txt + D.2434;
  D.2436 = *D.2435;
  D.2437 = (int) D.2436;
  D.2438 = D.2432 + D.2437;
  t = D.2438 % q;
  if (t < 0)
    goto <bb 19>;
  else
    goto <bb 20>;

  <bb 19>:
  t = t + q;

  <bb 20>:
  i = i + 1;

  <bb 21>:
  D.2441 = N - M;
  if (D.2441 >= i)
    goto <bb 9>;
  else
    goto <bb 22>;

  <bb 22>:
  return;

}



;; Function main (main, funcdef_no=1, decl_uid=2388, symbol_order=1)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
main ()
{
  int q;
  char pat[5];
  char txt[16];
  int D.2442;

  <bb 2>:
  txt = "GEEKS FOR GEEKS";
  pat = "GEEK";
  q = 101;
  search (&pat, &txt, q);
  D.2442 = 0;
  txt = {CLOBBER};
  pat = {CLOBBER};

<L1>:
  return D.2442;

}


