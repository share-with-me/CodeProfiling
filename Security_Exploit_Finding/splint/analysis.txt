test_flaw.c: (in function main)
test_flaw.c:10:2: Path with no return in function declared to return int
  There is a path through a function declared to return a value on which there
  is no return statement. This means the execution may fall through without
  returning a meaningful result to the caller. (Use -noret to inhibit warning)
test_flaw.c: (in function demo)
test_flaw.c:16:12: Unrecognized identifier: gettext
  Identifier used in code has not been declared. (Use -unrecog to inhibit
  warning)
test_flaw.c:17:9: Parameter 1 (b) to function strcpy is declared unique but may
                     be aliased externally by parameter 2 (a)
  A unique or only parameter may be aliased by some other parameter or visible
  global. (Use -mayaliasunique to inhibit warning)
test_flaw.c:18:2: Buffer overflow possible with sprintf.  Recommend using
                     snprintf instead: sprintf
  Use of function that may lead to buffer overflow. (Use -bufferoverflowhigh to
  inhibit warning)
test_flaw.c:18:10: Unrecognized identifier: s
test_flaw.c:19:2: Buffer overflow possible with sprintf.  Recommend using
                     snprintf instead: sprintf
test_flaw.c:20:2: Buffer overflow possible with sprintf.  Recommend using
                     snprintf instead: sprintf
test_flaw.c:20:25: Unrecognized identifier: bug
test_flaw.c:21:2: Buffer overflow possible with sprintf.  Recommend using
                     snprintf instead: sprintf
test_flaw.c:21:2: Format string parameter to sprintf is not a compile-time
                     constant: gettext("hello %s")
  Format parameter is not known at compile-time.  This can lead to security
  vulnerabilities because the arguments cannot be type checked. (Use
  -formatconst to inhibit warning)
test_flaw.c:22:2: Buffer overflow possible with sprintf.  Recommend using
                     snprintf instead: sprintf
test_flaw.c:22:13: Unrecognized identifier: unknown
test_flaw.c:22:2: Format string parameter to sprintf is not a compile-time
                     constant: unknown
test_flaw.c:23:9: Unrecognized identifier: bf
test_flaw.c:23:13: Unrecognized identifier: x
test_flaw.c:23:2: Format string parameter to printf is not a compile-time
                     constant: bf
test_flaw.c:24:2: Return value (type int) ignored: scanf("%d", &x)
  Result returned by function call is not used. If this is intended, can cast
  result to (void) to eliminate message. (Use -retvalint to inhibit warning)
test_flaw.c:25:2: Return value (type int) ignored: scanf("%s", s)
test_flaw.c:26:2: Return value (type int) ignored: scanf("%10s", s)
test_flaw.c:27:2: Return value (type int) ignored: scanf("%s", s)
test_flaw.c:28:2: Use of gets leads to a buffer overflow vulnerability.  Use
                     fgets instead: gets
test_flaw.c:28:7: Unrecognized identifier: f
test_flaw.c:28:2: Return value (type char *) ignored: gets(f)
  Result returned by function call is not used. If this is intended, can cast
  result to (void) to eliminate message. (Use -retvalother to inhibit warning)
test_flaw.c:31:2: Use of gets leads to a buffer overflow vulnerability.  Use
                     fgets instead: gets
test_flaw.c:31:2: Return value (type char *) ignored: gets(f)
test_flaw.c:32:2: Use of gets leads to a buffer overflow vulnerability.  Use
                     fgets instead: gets
test_flaw.c:32:2: Return value (type char *) ignored: gets(f)
test_flaw.c:35:2: Unrecognized identifier: syslog
test_flaw.c:35:9: Unrecognized identifier: LOG_ERR
test_flaw.c:35:52: Unrecognized identifier: filename
